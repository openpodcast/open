{"episodes": [{"name": "#42 Lexer, Parser und Open Source in Counterstrike", "id": "1OvywjCGrYah9AGX6w8Bnn", "url": "https://open.spotify.com/episode/1OvywjCGrYah9AGX6w8Bnn", "releaseDate": "2022-10-25", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a54596dc791ad1f7b62054744", "description": "Was haben Lexer, Parser und Counter-Strike gemeinsam? Richtig! Eine sch&ouml;ne Open Source Story.Computerspiele sind f&uuml;r viele Software-Entwicklerinnen und -Entwickler der Einstieg. Andere wiederum steigen &uuml;ber den klassischen Bildungsweg eines Informatik-Studiums in die Softwareentwicklung ein. Dabei wird oft viel Theorie wie Lexer, Parser und Compilerbau durchgenommen. Doch was haben Computerspiele mit Lexer und Parser gemeinsam?Andy erz&auml;hlt eine Story, wie er vor Jahren sich mit Lexer und Parser anhand einer Counter-Strike-Konfigurationsdatei vertraut gemacht hat. Eigentlich nur, um eine datengetriebene Spielanalyse zu betreiben. Raus kam ein Lexer und Parser f&uuml;r das Valve Data Format (VDF).Eine Geschichte voller Over-Engineering, Open Source, Spa&szlig; und einem Job-Angebot.Bonus: Wie Wolfgang nur ans cheaten denkt, was autoexec mit Maustreibern zu tun hat und was Landmaschinen auf YouTube mit Rabbitholes zu tun haben.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776LinksReturn to Monkey Island: https://returntomonkeyisland.com/Crash Bandicoot: https://www.crashbandicoot.com/deDreamHack LAN-Party: https://de.wikipedia.org/wiki/DreamHackCounter-Strike: Global Offensive: https://store.steampowered.com/app/730/CounterStrike_Global_Offensive/LANSuite auf GitHub: https://github.com/lansuite/lansuiteEpisode #41 SQL-Injections https://engineeringkiosk.dev/episodes/41Tactical Ops: Assault on Terror: https://de.wikipedia.org/wiki/Tactical_Ops:_Assault_on_TerrorESL: https://esl.com/Source (Spiel-Engine): https://de.wikipedia.org/wiki/Source_(Spiel-Engine)Philips HUE: https://www.philips-hue.com/de-deValve Data Format (VDF) - Format: https://developer.valvesoftware.com/wiki/KeyValuesValve Data Format (VDF) - Sample Configuration File: https://developer.valvesoftware.com/wiki/Counter-Strike:_Global_Offensive_Game_State_Integration#Sample_Configuration_FileCounter-Strike: Global Offensive Game State Integration: https://developer.valvesoftware.com/wiki/Counter-Strike:_Global_Offensive_Game_State_IntegrationA Lexer and Parser for Valves Data Format (known as vdf) written in Go: https://github.com/andygrunwald/vdfEngineering Kiosk #38 Monitoring, Metriken, Tracing, Alerting, Observability: https://engineeringkiosk.dev/podcast/episode/38-monitoring-metriken-tracing-alerting-observability/Drachenbuch (Compiler Bau): https://de.wikipedia.org/wiki/DrachenbuchHandwritten Parsers &amp; Lexers in Go: https://blog.gopheracademy.com/advent-2014/parsers-lexers/InfluxDB: https://www.influxdata.com/Influx Query Language: https://docs.influxdata.com/influxdb/v1.8/query_language/Flow-Status: https://de.wikipedia.org/wiki/Flow_(Psychologie)ANTLR (ANother Tool for Language Recognition): https://www.antlr.org/Erweiterte Backus-Naur-Form: https://de.wikipedia.org/wiki/Erweiterte_Backus-Naur-FormFOSDEM 2023 - Konferenz: https://fosdem.org/Faceit: https://www.faceit.com/deEngineering Kiosk #03 Over-Engineering, das Werkzeug des Teufels?: https://engineeringkiosk.dev/podcast/episode/03-over-engineering-das-werkzeug-des-teufels/Engineering Kiosk #23 Schaltest du noch oder automatisiert du schon: Home Automation: https://engineeringkiosk.dev/podcast/episode/23-schaltest-du-noch-oder-automatisiert-du-schon-home-automation/Open Broadcaster Software (OBS): https://obsproject.com/deAnwendungsfall &quot;Home Assistant CS:GO game state integration&quot;: https://www.youtube.com/watch?v=kEM54QmAMlwAnwendungsfall &quot;CS:GO C4 Hue Lights (Game State Integration)&quot;: https://www.youtube.com/watch?v=QBdI54MHB-kAnwendungsfall &quot;CS:GO Game State Integration Broadcast HUD&quot;: https://www.youtube.com/watch?v=TQPU03yLSoAMonkey Island Sound am Ende https://www.youtube.com/watch?v=qUMKy2Jk3Oo&nbsp;Sprungmarken(00:00:00) Intro(00:00:42) Wolfgang und Computer-Spielen, LAN-Parties, 10 Mbit-Netzwerke und End-Terminator(00:08:57) Der Hintergrund: Wie Andy zu Counter Strike kam und was das mit programmieren zu tun hat(00:14:25) Counter Strike Game State Integration: Webhooks vom Spiel(00:19:52) Valve Data Format (VDF), die Source Game Engine(00:21:29) Daten-getriebene Spiel-Strategien und ein automatischer Installer f&uuml;r eine Webhook-Adresse(00:25:28) Ein Lexer und Parser f&uuml;r das Valve Data Format (VDF)(00:30:03) Was ist ein Lexer? Was ist ein Token?(00:35:14) Was ist ein Parser?(00:39:18) War es notwendig, einen Lexer und Parser zu schreiben? Und die Testphase des Installers(00:41:47) Wird die Lexer- und Parser Library von jemandem verwendet? Und ein Job-Angebot(00:46:31) Anwendungsf&auml;lle: Spiele-Analysen, Zimmerlicht auf Basis der Bombe &auml;ndern, Streaming-Overlays(00:49:43) Eine sch&ouml;ne Open Source Story(00:51:46) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 3218104, "starts": 28, "streams": 22, "listeners": 17, "sparkLine": [], "hasVideo": false}, {"name": "#41 SQL Injections - Ein untersch\u00e4tztes Risiko", "id": "33PP79EzBWrsQ5aZqqzlTw", "url": "https://open.spotify.com/episode/33PP79EzBWrsQ5aZqqzlTw", "releaseDate": "2022-10-18", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a9f9e6dd0e9733f9d9049d177", "description": "SQL Injections: Eine der weitverbreitetsten Sicherheitsl&uuml;cken im Web, auch im Jahr 2022Der Gro&szlig;teil aller Applikationen interagiert in irgendeiner Art und Weise mit einer Datenbank. Deswegen werden die meisten Entwicklerinnen und Entwickler bereits von der Sicherheitsl&uuml;cke &quot;SQL Injection&quot; geh&ouml;rt haben. Seit 24 Jahren ist dies eine der weitverbreitetsten Sicherheitsl&uuml;cken im Internet und es ist kein Ende in Sicht. Was ist eigentlich eine SQL-Injection im Detail? Welche verschiedenen Arten gibt es? Was ist der Grund, dass uns dieses Einfallstor so lange besch&auml;ftigt? Woher kommt diese und wer hat sie entdeckt? Wie kann man sich sch&uuml;tzen und seine Anwendung ausreichend testen? All das und noch viel mehr in dieser Episode.Bonus: Der Kontrast zwischen Duisburg und Berlin und wie die SQL-Injektion als Nebenprodukt entdeckt wurde.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776LinksPhrack Magazine&nbsp;Volume 8, Issue 54 Dec 25th, 1998, article 08 of 12: http://www.phrack.org/archives/issues/54/8.txtOWASP Top Ten 2021: https://owasp.org/www-project-top-ten/CVE Details - Security Vulnerabilities Published In 2022(SQL Injection): https://www.cvedetails.com/vulnerability-list/year-2022/opsqli-1/sql-injection.htmlAnalyzing Prepared Statement Performance: https://orangematter.solarwinds.com/2014/11/19/analyzing-prepared-statement-performance/SQL Injection Prevention Cheat Sheet: https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.htmlOWASP Top 10 (2021) - A03:2021 &ndash; Injection: https://owasp.org/Top10/A03_2021-Injection/CVE Details - Heartbleed (CVE-2014-0160): https://www.cvedetails.com/cve/CVE-2014-0160/CVE Details - Log4Shell (CVE-2021-44228): https://www.cvedetails.com/cve/CVE-2021-44228/xkcd &quot;Exploits of a Mom&quot;: https://xkcd.com/327/HackerOne-Programm von trivago: https://hackerone.com/trivagoOwncloud: https://owncloud.com/TYPO3: https://typo3.org/Wordpress: https://wordpress.com/de/SQL-Proxy: https://github.com/sysown/proxysqlGitHub CodeQL: https://codeql.github.com/sqlmap: https://sqlmap.org/SQLi-Fuzzer: A SQL Injection Vulnerability Discovery Framework Based on Machine Learning: https://ieeexplore.ieee.org/document/9657925OWASP Zed Attack Proxy (ZAP): https://www.zaproxy.org/PlanetScale: https://planetscale.com/Awesome static analysis: https://github.com/analysis-tools-dev/static-analysisSprungmarken(00:00:00) Intro(00:00:42) SQL-Injections aus den 90ern und die Vielfalt in Berlin(00:02:49) Das heutige Thema: Web-Security SQL-Injections in der Tiefe(00:05:07) Was sind SQL-Injections?(00:08:48) Sind SQL-Injections auch im Jahr 2022 noch ein Problem?(00:10:56) Wann gab es die erste SQL-Injection? Woher stammt diese Sicherheitsl&uuml;cke?(00:13:22) Was sind die Gr&uuml;nde, dass SQL-Injections noch so ein gro&szlig;es Problem sind?(00:19:37) Verschiedene Arten von SQL-Injections: Output-Based, Error-Based, Blind-SQL-Injections, Time-Based-SQL-Injections, Out-of-Band-SQL-Injections(00:27:42) Bug Bounty: 2-Channel SQL Injection-Attacke in Kombination mit Cross-Site-Scripting (XSS) bei trivago(00:29:42) Mehrstufige Attacken und Ausnutzung mehrerer L&uuml;cken nacheinander(00:33:16) M&ouml;glicher Schaden durch eine SQL-Injection: Daten ver&auml;ndern, Befehle auf dem Server ausf&uuml;hren, lokale Dateien lesen und schreiben, SQL-Funktionen ausf&uuml;hren, Denial of Service (DoS)(00:39:09) Gegenma&szlig;nahmen um SQL-Injections zu verhindern: Prepared Statements, Datenbank-Komponenten updaten, limitierte Rechte f&uuml;r Datenbank-User, Web Application Firewalls (WAF)(00:56:42) M&ouml;glichkeiten um deine Anwendung automatisch zu testen: Unit-Tests, statische Analyse, dynamische Analyse mit sqlmap und Fuzzing(01:02:51) Ma&szlig;nahmen um Sicherheit zu gew&auml;hrleisten von Datenbank as a Service-Providern(01:06:51) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 4117154, "starts": 101, "streams": 82, "listeners": 41, "sparkLine": [], "hasVideo": false}, {"name": "#40 Wie wird man und Frau zum Senior Dev?", "id": "75nNWSvFJyBMuj8Gnu2ega", "url": "https://open.spotify.com/episode/75nNWSvFJyBMuj8Gnu2ega", "releaseDate": "2022-10-11", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8afb5a700e1c8f463ab4ba886e", "description": "Was ist eigentlich ein Senior Engineer und wie werde ich zu einem?In der Tech-Industrie werden Titel wie Junior-, Senior-, Staff- und Co genutzt, um Levels und Erfahrung auszudr&uuml;cken. Doch was ist eigentlich ein Senior-Engineer? Was unterscheidet ein Senior von einem Junior? Wie kann sowas in der Praxis aussehen? Ist Zeit ein wirklicher Faktor f&uuml;r eine Bef&ouml;rderung (10 Jahre Berufserfahrung oder 10x 1 Jahr Berufserfahrung)? Ist &quot;Senior&quot; zu sein ein &quot;Einmal-Aufwand&quot; oder ist kontinuierliche Energie gefordert?In dieser Episode beschreiben Andy und Wolfgang einige Attribute, die den Unterschied eines Juniors und Seniors darstellen und beschreiben, wie man den Weg zum Senior einschlagen kann.Bonus: Warum ein Meterstab auch Zollstock genannt wird und warum Wolfgang ein T als hart bezeichnet.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776LinksThe Scoop: Netflix&rsquo;s historic introduction of levels for software engineers: https://blog.pragmaticengineer.com/netflix-levels/Brendan Gregg: https://brendangregg.com/Backlog Grooming: https://www.agile-academy.com/de/product-owner/product-backlog-refinement-grooming/OWASP Top 10: https://owasp.org/www-project-top-ten/Engineering Kiosk #10 Das Karriere Booster Meeting 1:1s: https://engineeringkiosk.dev/podcast/episode/10-das-karriere-booster-meeting-11s/Engineering Kiosk #35 Knowledge Sharing oder die Person, die nie &quot;gehen&quot; sollte...: https://engineeringkiosk.dev/podcast/episode/35-knowledge-sharing-oder-die-person-die-nie-gehen-sollte/Career framework inspiration from the world's best companies: https://progression.fyi/Circle CI: Engineering Competency Matrix: https://docs.google.com/spreadsheets/d/131XZCEb8LoXqy79WWrhCX4sBnGhCM1nAIz4feFZJsEo/edit#gid=0How to Exhibit Leadership as an Individual Contributor: https://www.tombartel.me/blog/exhibit-leadership-as-individual-contributor/How Individuals Advance at Buffer, Without Becoming Managers: https://buffer.com/resources/career-framework/Engineering Ladders: http://www.engineeringladders.com/Sprungmarken(00:00:00) Intro(00:00:58) Berufserfahrung, Breites vs. tiefes Wissen und Karriere(00:06:23) Wie wichtig ist Karriere und Titel?(00:08:03) Umgang mit Positions-Titeln in Firmen(00:09:28) Heutiges Thema: Wie kann ich ein Senior Engineer werden?(00:13:02) Erste Schritte zum Senior: &Uuml;bernahme von kleinen Projekten - Die Arbeit pro-aktiv vorantreiben(00:18:18) Impact: Was wird im Produkt wirklich gebraucht?(00:19:34) Technische Skills: Entwicklung von Code und Testing(00:22:34) Technische Skills: Debugging(00:24:43) Technische Skills: Monitoring, Alerting und Skalierung(00:26:13) Technische Skills: Security(00:28:48) Kommunikations Skills: Feedback, positiv gestimmt, Mentoring und Knowledge Sharing(00:35:15) Senior Engineer zu sein ist nicht einfach(00:35:47) Technologie vs. Business-Verst&auml;ndnis: Wann ist eine L&ouml;sung gut genug?(00:39:38) In die Senior-Rolle reinwachsen: Erfahrung und Zeit(00:42:54) Unterschiedliches Verst&auml;ndnis von der Senior-Rolle(00:45:07) Der eine Tipp auf dem Weg zum Senior Engineer(00:47:32) Inflation&auml;re Nutzung des Begriffs &quot;Senior&quot;(00:48:37) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 2983910, "starts": 117, "streams": 92, "listeners": 52, "sparkLine": [], "hasVideo": false}, {"name": "#39 Gemischte T\u00fcte: Software Engineer, Github, OpenSource, Git und HomeOffice", "id": "11sFbhhPfqhw5ICp85CnDN", "url": "https://open.spotify.com/episode/11sFbhhPfqhw5ICp85CnDN", "releaseDate": "2022-10-04", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a017b1b05c7d42111787b0b1e", "description": "Ein neues Format: Die gemischte T&uuml;te mit Software Engineers, Git, GitHub, Open Source und Home-Office-EquipmentEine Episode mit vier verschiedenen Themen, die uns als User-Fragen zugespielt wurden. Es geht um den Unterschied von einem Software Developer und Software Engineer, ob wirklich alles was wir auf GitHub finden als &quot;Open Source&quot; bezeichnet werden kann und benutzt werden darf, ob Git wirklich dezentral ist und wie wir das ganze eigentlich benutzen und wie die Home-Offices von Wolfgang und Andy eigentlich aussehen.Bonus: Ob Lakritz was in einer gemischten T&uuml;te zu suchen hat.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776LinksEngineering Kiosk Episode #36 Sechsstellige IT-Geh&auml;lter? Wie? Was? Wo? Fair?: https://engineeringkiosk.dev/podcast/episode/36-sechs-stellige-it-geh%C3%A4lter-wie-was-wo-fair/ElasticSearch - FAQ zur &Auml;nderung beim Lizenzmodell (2021): https://www.elastic.co/de/pricing/faq/licensingChoose a License: https://choosealicense.com/Open Source Lizenzen: https://opensource.org/licenses/alphabeticalComparison of free and open-source software licenses: https://en.wikipedia.org/wiki/Comparison_of_free_and_open-source_software_licensesCreative Commons: https://de.creativecommons.net/start/Git Grundlagen - Mit Remotes arbeiten: https://git-scm.com/book/de/v2/Git-Grundlagen-Mit-Remotes-arbeitenSubversion: https://subversion.apache.org/Engineering Kiosk Episode #16 Code Reviews: N&uuml;tzlich oder bremsen nur ein gutes Team?: https://engineeringkiosk.dev/podcast/episode/16-code-reviews-n%C3%BCtzlich-oder-bremsen-nur-ein-gutes-team/git-lfs f&uuml;r gro&szlig;e Bin&auml;rdateien: https://git-lfs.github.com/Branches verstehen https://learngitbranching.js.org/Jarvis Bambus h&ouml;henverstellbarer Schreibtisch: https://www.fully.com/de-de/hoehenverstellbare-schreibtische/jarvis-bambus-hoehenverstellbarer-schreibtisch.htmlH&Aring;G Capisco ergonomischer B&uuml;rostuhl: https://www.fully.com/de-de/stuehle/stuehle-fuer-hoehenverstellbare-schreibtische/hag-capisco-ergonomischer-buerostuhl.htmlAndy&rsquo;s Mic Rode NT-USB: https://rode.com/de/microphones/usb/nt-usbWolfi&rsquo;s Mic Samson Q2U http://www.samsontech.com/samson/products/microphones/usb-microphones/q2u/&nbsp;Sprungmarken(00:00:00) Intro(00:00:35) Das Format &quot;die gemischte T&uuml;te&quot;(00:02:42) Was ist der Unterschied von einem Software Developer und Software Engineer?(00:08:04) Ist eigentlich alles, was auf Github ist, Open Source und darf ich dies einfach so verwenden?(00:18:47) Ist Git wirklich dezentral und wir k&ouml;nnen weiterarbeiten, auch wenn GitHub down ist?(00:31:14) Wie sieht unser Home-Office Setup aus?(00:45:39) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 2866360, "starts": 129, "streams": 97, "listeners": 55, "sparkLine": [], "hasVideo": false}, {"name": "#38 Monitoring, Metriken, Tracing, Alerting, Observability", "id": "6o12Q11f95KuKYytqmis6u", "url": "https://open.spotify.com/episode/6o12Q11f95KuKYytqmis6u", "releaseDate": "2022-09-27", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a186f9ee35a8cc487a4be886f", "description": "Wie w&uuml;rde heutzutage ein moderner Logging, Metriken, Monitoring, Alerting und Tracing-Stack aussehen?Im Infrastruktur-Bereich gibt es zu jedem Bereich etliche Tools. Cloud-Native ist das Buzzword der Stunde. In dieser Episode erz&auml;hlt Andy, wie er einen modernen Stack f&uuml;r ein Side-Projekt f&uuml;r die Bereiche Logging, Metriken, Monitoring, Alerting und Tracing aufsetzen w&uuml;rde. Unter anderem geht es dabei um Fragen wie: Was sollte man eigentlich alles loggen? Wie kann man von einem Alert angerufen werden? Wie visualisiert man Daten in sch&ouml;nen Graphen? Brauchen wir Tracing? Und was ist Observability?Bonus: Engineering Porn und Buzzword-Bingo.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776LinksEpisode #37 Mit IT-B&uuml;chern Geld verdienen? Wer liest &uuml;berhaupt noch B&uuml;cher?: https://engineeringkiosk.dev/podcast/episode/37-mit-it-b%C3%BCchern-geld-verdienen-wer-liest-%C3%BCberhaupt-noch-b%C3%BCcher/?pkn=shownotes&nbsp;Episode #17 Was k&ouml;nnen wir beim Incident Management von der Feuerwehr lernen?: https://engineeringkiosk.dev/podcast/episode/17-was-k%C3%B6nnen-wir-beim-incident-management-von-der-feuerwehr-lernen/?pkn=shownotes&nbsp;Sentry: https://sentry.io/Datadog: https://www.datadoghq.com/Splunk: https://www.splunk.com/Elasticsearch: https://www.elastic.co/de/enterprise-search/Logstash: https://github.com/elastic/logstashKibana: https://github.com/elastic/kibanaOpenSearch: https://opensearch.org/Elastic Cloud: https://www.elastic.co/de/cloud/Aiven: https://aiven.io/Fluentd: https://www.fluentd.org/Amazon S3 und S3 Glacier: https://aws.amazon.com/de/s3/Amazon Athena: https://aws.amazon.com/de/athena/Prometheus: https://prometheus.io/VictoriaMetrics: https://github.com/VictoriaMetrics/VictoriaMetricsInfluxDB: https://www.influxdata.com/M3 Metrics Engine: https://m3db.io/Prometheus Node Exporter: https://github.com/prometheus/node_exporterGrafana: https://github.com/grafana/grafanaPromQL: https://prometheus.io/docs/prometheus/latest/querying/basics/OpsGenie: https://www.atlassian.com/de/software/opsgenieJaeger: https://www.jaegertracing.io/Zipkin: https://zipkin.io/OpenTracing: https://opentracing.io/OpenTelemetry: https://opentelemetry.io/yak shaving: https://seths.blog/2005/03/dont_shave_that/Cloud Native Computing Foundation: https://www.cncf.io/Sprungmarken(00:00:00) Intro(00:00:50) Wolfgangs MySQL-Buch(00:02:11) Heutiges Thema: Wie w&uuml;rde Andy die Themen Monitoring, Alerting, Metriken und Logging bei einem Side Projekt angehen?(00:04:49) Warum brauchst du Logging, Monitoring, Metriken und Tracing?(00:07:29) Logging von Exceptions, Warnings und anderen Fehler, Logging und der ELK-Stack(00:16:06) Was sollte man eigentlich alles loggen?(00:19:22) Log-Rotation und Log-Retention auf Object-Storage(00:27:30) Metriken mit Prometheus(00:31:46) Visualisierung von Metriken mit Grafana(00:34:25) Intelligente Alerting Systeme und die richtigen Schwellenwerte finden(00:38:47) Alerts senden und anrufen lassen(00:43:22) Tracing: Was ist das und brauchen wir das?(00:48:49) Was ist Observability?(00:51:42) Iterativer Aufbau seiner Plattform und Alternativen(00:54:49) Keine bezahlte Werbung(00:55:14) Outro und FeedbackHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 3350382, "starts": 112, "streams": 85, "listeners": 52, "sparkLine": [], "hasVideo": false}, {"name": "#37 Mit IT-B\u00fcchern Geld verdienen? Wer liest \u00fcberhaupt noch B\u00fccher?", "id": "3KlgP1cJSP9DTFab6DFxLF", "url": "https://open.spotify.com/episode/3KlgP1cJSP9DTFab6DFxLF", "releaseDate": "2022-09-20", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8af1b35a1b08236a7b9d111f5a", "description": "Lohnt es sich ein IT-Fachbuch zu schreiben?Es gibt zu jeder Software und zu jedem IT-Thema mindestens ein Buch. Doch wie ist es eigentlich, ein solches Buch zu schreiben? Was macht ein Verlag und braucht man diesen in der heutigen Zeit eigentlich noch? Wird man dadurch reich oder bleibt es Hungerlohn? Was f&uuml;r ein Tech-Stack steckt hinter einem Buch? Und wie w&uuml;rde man eigentlich starten? All das kl&auml;ren wir in dieser Episode mit Wolfgang, der ein Buch &uuml;ber MySQL im Rheinwerk-Verlag (Galileo Press) publiziert hat.Bonus: Warum Wolfgang eher ein Fan vom Reden ist und warum er wirklich so lange f&uuml;r seinen Dr. Titel ben&ouml;tigt hat.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776LinksBewerbungsgespr&auml;che mit Wolfgang Gassler, Interview von Nils Langner: https://www.youtube.com/watch?v=-c3ZAp7MvTIMySQL: Das umfassende Handbuch: https://www.rheinwerk-verlag.de/mysql-das-umfassende-handbuch/&nbsp;LaTeX: https://www.latex-project.org/ct Magazin: https://www.heise.de/ct/Rheinwerk Verlag (Galileo Press): https://www.rheinwerk-verlag.de/Michael Kofler: https://kofler.info/&nbsp;Buch &quot;Designing Data-Intensive Applications&quot;: https://dataintensive.net/Buch &quot;MAKE&quot; von Pieter Levels: https://readmake.com/Use the Index, Luke (Markus Winand): https://use-the-index-luke.com/Simon Sinek: Start with why: https://www.youtube.com/watch?v=u4ZoJKF_VuABuch &quot;Observability Engineering&quot;: https://www.oreilly.com/library/view/observability-engineering/9781492076438/Honeycomb: https://www.honeycomb.io/LeanPub: https://leanpub.com/Amazon Print on Demand: https://www.amazon.de/Buecher-Print-On-Demand/b?ie=UTF8&amp;node=5445727031Episode #35 Knowledge Sharing oder die Person, die nie &quot;gehen&quot; sollte...: https://engineeringkiosk.dev/podcast/episode/35-knowledge-sharing-oder-die-person-die-nie-gehen-sollte/Sprungmarken(00:00:00) Intro(00:00:40) Schreib-Skills(00:02:42) Thema: Das schreiben von IT Fachb&uuml;chern - MySQL, das umfassende Handbuch(00:03:39) Wie gut kennst du dich im Bereich MySQL aus?(00:05:19) &Uuml;berblick &uuml;ber Wolfgangs MySQL Buch(00:09:34) Wie lange habt ihr ben&ouml;tigt, das Buch zu schreiben?(00:11:24) Welcher Tech-Stack wurde genutzt, um das Buch zu schreiben?(00:13:43) Welche Aufgaben hat der Verlag &uuml;bernommen?(00:18:54) Wie hast du die Verbindung zum Verlag aufgebaut?(00:21:17) Was verdient man mit einem IT Fachbuch?(00:28:21) Warum hast du ein Buch geschrieben? Was bringt es ein Buch zu schreiben?(00:30:27) Was hat sich durch das Buch bei dir professionell ergeben?(00:32:22) Wieso habt ihr das Schreiben einer neuen Edition abgelehnt?(00:33:56) Imposter-Syndrom: Wie viel wei&szlig;t du &uuml;ber das MySQL Datenbank-Thema, nach deiner Recherche?(00:35:52) Wie viele Amazon-Reviews hast du gekauft?(00:38:39) Liest du IT-Fachb&uuml;cher?(00:43:24) W&uuml;rdest du nochmal ein Buch schreiben?(00:46:32) W&uuml;rdest du Leuten empfehlen, ein Buch zu schreiben?(00:51:00) Was w&uuml;rdest du Leuten empfehlen, die ein Buch schreiben m&ouml;chten?(00:53:25) W&uuml;rdest du nochmal ein Buch &uuml;ber eine Software/Software-Version schreiben?(00:55:50) Hattest du schon Ber&uuml;hrungen zu einem Ghostwriter?(00:58:46) Lohnt sich das Mittel- und Langfristig ein Buch zu schreiben?(01:01:22) Selbst-Publishing und Print on Demand(01:03:56) Audio-Rants, Reddit und OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 3621224, "starts": 39, "streams": 28, "listeners": 21, "sparkLine": [], "hasVideo": false}, {"name": "#36 Sechs-stellige IT-Geh\u00e4lter? Wie? Was? Wo? Fair?", "id": "3FRoRTN1kQMSwmlcUQnkL3", "url": "https://open.spotify.com/episode/3FRoRTN1kQMSwmlcUQnkL3", "releaseDate": "2022-09-13", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a627bb22e21b7e13c0573dc80", "description": "Geh&auml;lter als Software-Engineer: Wie sind diese aufgebaut?IT-Geh&auml;lter sind so hoch wie noch nie. Doch sind 6-Stellige Geh&auml;lter gerechtfertigt, fair und bekommen die Mitarbeiter wirklich diesen Betrag j&auml;hrlich &uuml;berwiesen? Um diese Frage und &auml;hnliche Themen geht es in dieser Episode: Welche Gehaltsbausteine gibt es? Lohnt es sich bei US-Geh&auml;ltern &uuml;berhaupt noch in Deutschland zu bleiben? Gibt es eine gro&szlig;e Imbalance zu anderen Industrien? Sind die Geh&auml;lter &uuml;berhaupt gerechtfertigt und was machen zB kleine Agenturen, wenn diese mit der Entwicklung in der Industrie nicht mithalten k&ouml;nnen?Bonus: Wolfgang der Cloud-Hater, ob Deutschland Single-Feindlich ist und was der VW Golf und das Marketing der Cloud damit zu tun haben.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776LinksEpisode #34 Wie cloudy bist du?: https://engineeringkiosk.dev/podcast/episode/34-wie-cloudy-bist-du/The Architect: Bare Metalsson Rejects the Cloud: https://www.youtube.com/watch?v=AXxr0pghWS0Super Duper Podcast - Bewerbungsgespr&auml;che mit Wolfgang Gassler: https://www.youtube.com/watch?v=-c3ZAp7MvTIEquity - ESOP: https://de.wikipedia.org/wiki/BelegschaftsaktieEquity - VSOP: https://de.wikipedia.org/wiki/Mitarbeiter-Kapitalbeteiligung#Virtuelle_MitarbeiterbeteiligungArtikel von Gergely Orosz (Pragmatic Engineer) zum dreistufigen Gehaltsmarkt und wann hohe Geh&auml;lter gezahlt werden https://blog.pragmaticengineer.com/software-engineering-salaries-in-the-netherlands-and-europe/&nbsp;TYPO3: https://typo3.org/Sprungmarken(00:00:00) Intro(00:00:40) Feedback-Cycle beim Podcasting und Feedback zu &quot;#34 Wie cloudy bist du?&quot;(00:04:51) Format-Idee &quot;Gemischte T&uuml;te&quot;(00:07:09) Heutiges Thema: Gehalt, Gehaltsbausteine, hohe Geh&auml;lter in der Tech-Industrie(00:08:51) Total Compensation: Vier Gehaltsbausteine - Basis-Gehalt, Signing-Bonus, Equity und j&auml;hrliche Bonuszahlungen(00:21:15) Ist Weihnachts- und Urlaubsgeld als Bonuszahlung zu sehen?(00:22:35) Lohnt es sich langfristig als Entwickler noch in Deutschland zu bleiben, wenn man Geh&auml;lter von 300.000&euro; in anderen L&auml;ndern sieht?(00:27:43) Imbalance von Geh&auml;ltern zu anderen Industrien, der Impact deiner Arbeit und Geh&auml;lter von Web-Agenturen vs. Software as a Service-Firmen(00:36:14) Agenturen als Talent-Pool f&uuml;r gro&szlig;e Tech-Firmen(00:43:46) &Auml;ltere (50+) Entwickler in Agenturen, M&ouml;glichkeiten f&uuml;r neue Jobs und die eigene Lerngeschwindigkeit(00:50:07) Ein Fail f&uuml;r die Formatidee &quot;Gemischte T&uuml;te&quot; und sind hohe steigende Geh&auml;lter &uuml;berhaupt noch fair?(00:52:40) Outro und Gemischte T&uuml;te: Was ist der Unterschied von einem Softwareentwickler und Software-Engineer?HostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 3255481, "starts": 48, "streams": 39, "listeners": 26, "sparkLine": [], "hasVideo": false}, {"name": "#35 Knowledge Sharing oder die Person, die nie \"gehen\" sollte...", "id": "4oZ8sFzPQHMypISi7qmGSR", "url": "https://open.spotify.com/episode/4oZ8sFzPQHMypISi7qmGSR", "releaseDate": "2022-09-06", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a65249b5c9f53ceccf1bf820a", "description": "Der Dauerbrenner in jedem Team: Wie bekommt man ordentliches Knowledge Sharing hin?Jeder kennt's: Die Kollegin ist im Urlaub und genau in dieser Zeit l&auml;uft was mit der einen Komponente schief, wo sie das gr&ouml;&szlig;te Wissen dar&uuml;ber hat. Knowledge Sharing richtig hinzubekommen und das Wissen breit zu verteilen ist eine Mammutaufgabe. Aber eine wichtige, speziell in einer Remote-Umgebung.In dieser Episode gehen wir einige Mythen und Techniken durch, die euch beim Knowledge Sharing unterst&uuml;tzen k&ouml;nnen: Was ist der Bus-Faktor? Muss jeder im Team alles wissen und &uuml;bernehmen k&ouml;nnen? Wobei kann Mob-Programming helfen? Was sind Guilds? Und kann man eigentlich zu viel lernen? Und noch viele weitere Themen.Bonus: Warum das C-Level-Management nicht im selben Flugzeug fliegen darf und ob Podcasts, die Mitarbeiter-Zeitung abl&ouml;sen.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776LinksNorwegischer Konzern kauft Ebay Kleinanzeigen: https://www.spiegel.de/wirtschaft/unternehmen/ebay-kleinanzeigen-wird-an-norwegischen-konzern-verkauft-a-792a2f35-bc5c-45a6-aa72-03b62d67da13Willhaben.at: https://www.willhaben.at/Marktplaats.nl: https://www.marktplaats.nl/Bus-Faktor: https://de.wikipedia.org/wiki/Truck_Numberpgbouncer: https://www.pgbouncer.org/pghoard: https://github.com/aiven/pghoardOpenSSL: https://www.openssl.org/Visual Studio Live Share: https://visualstudio.microsoft.com/de/services/live-share/Community of Practice: https://de.wikipedia.org/wiki/Community_of_Practiceblack hat Conference: https://www.blackhat.com/the bread code @GitHub https://github.com/hendricius/the-bread-codethe bread code @YouTube https://www.youtube.com/c/TheBreadCode Episode #14 async und await: asynchrones Arbeiten im Alltag: https://engineeringkiosk.dev/podcast/episode/14-async-und-await-asynchrones-arbeiten-im-alltag/Episode #29 Die andere Seite: Meetups &amp; Konferenzen organisieren: https://engineeringkiosk.dev/podcast/episode/29-die-andere-seite-meetups-konferenzen-organisieren/Sprungmarken(00:00:00) Intro(00:00:45) eBay Kleinanzeigen und Landing-Pages f&uuml;r Auto-Reifen(00:08:20) Das Thema der Episode: Knowledge Sharing(00:11:11) Der Bus-Faktor(00:13:01) Warum Knowledge Sharing wichtig f&uuml;r die Kollaboration und Produktivit&auml;t ist(00:15:05) Mythos &quot;Jeder im Team muss alles Wissen und &uuml;bernehmen k&ouml;nnen&quot;(00:18:05) M&ouml;glichkeiten zur internen Dokumentation: Design Documents / Request For Comments / Discover Documents / Architecture Decision Records und Zielgruppe der Dokumentation(00:24:43) Pair- und Mob-Programming(00:28:32) Guilds (Community of Practice), Support vom Management und Kosten von Knowledge Sharing(00:39:38) Interne Konferenzen, Vortr&auml;ge halten und das Imposter-Syndrom(00:49:37) Lunch-Talks(00:52:21) Welcher Lerntyp bist du? - Viel lesen, Hands-On, Frontal-Lehre, Video-Tutorials, Audio - Das richtige Format(00:57:28) Kann man zu viel lernen?(00:59:09) Ist Knowledge-Sharing schwieriger in einem Remote-Umfeld?(01:02:21) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 3784656, "starts": 31, "streams": 27, "listeners": 14, "sparkLine": [], "hasVideo": false}, {"name": "#34 Wie cloudy bist du?", "id": "4DfOEf84e1ajgtH5CV4YCH", "url": "https://open.spotify.com/episode/4DfOEf84e1ajgtH5CV4YCH", "releaseDate": "2022-08-30", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a4259b17db728d1ba9d4093c8", "description": "Die Cloud Native Infrastruktur vs. ein dicker Server - Ein Dauerstreit-ThemaAWS, GCP, Azure und Co bieten viele Cloud Native Services, die dir dein Leben vereinfachen sollen. Serverless, weniger Admins und alles super g&uuml;nstig. Das sind die Versprechen. Doch ist das wirklich so? W&auml;re ein leistungsstarker Server nicht besser, g&uuml;nstiger, einfacher und ausreichend? Und wie steht das nicht im Konflikt mit einer modernen Microservice-Architektur?All diese Fragen stellen Wolfgang und Andy in dieser Episode, wo sie einen Artikel &quot;Use One Big Server&quot; besprechen.Bonus: Was eine Klatsche auf Reddit, Vendor-Lock-in und CV-Driven-Development mit Servern zu tun hat.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776LinksReddit-Post: https://www.reddit.com/r/de_EDV/comments/wp9arv/was_habt_ihr_so_mit_github_actions_automatisiert/&nbsp;Artikel &quot;Use One Big Server&quot;: https://specbranch.com/posts/one-big-server/Hackernews: https://news.ycombinator.com/9gag: https://9gag.com/F-Online - Vorbereitung f&uuml;r die theoretische Fahrschulpr&uuml;fung: https://www.f-online.app/Proxmox: https://www.proxmox.com/Kelsey Hightower: https://en.wikipedia.org/wiki/Kelsey_HightowerSprungmarken(00:00:00) Intro(00:00:43) Intro mit einer Klatsche auf Reddit(00:03:49) Wir brauchen euren Support: Bewertet uns in eurer Podcast-App(00:04:26) Warum l&auml;uft F-Online auf einem gro&szlig;en Server und nicht Cloud Native und Serverless?(00:10:43) Saisonaler Traffic, Peak-Usage und Ressourcen richtig ausnutzen bei einem virtuellen Server vs. Cloud Native(00:17:05) Ist der Vergleich von Monet&auml;ren Kosten allein sinnvoll? Wie bezieht man die Implementierung mit ein?(00:18:33) Debugging und Testing von GCP Cloud Functions/AWS Lambdas(00:21:14) Ein gro&szlig;er Server ist f&uuml;r viele Applikationen die bessere Wahl und das Abh&auml;ngigkeitsverh&auml;ltnis zu Cloud Providern(00:26:14) Fehlende Perspektiven bei dem Artikel &quot;Use One Big Server&quot; und Argumente f&uuml;r Cloud Native(00:31:06) Optimierung von Cloud Kosten, Vendor-Lock-in, Multi-Cloud und Monolith vs. Microservice(00:34:20) Ist der LAMP-Stack bereits eine Micro-Service-Architektur?(00:37:34) Ist ein Micro-Service automatisch eine eigene Applikation? Ist der Micro-Service-Hype vorbei?(00:40:34) &quot;Boring&quot;-Software kann ein Vorteil sein(00:43:30) Zusammenfassung und OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 2959954, "starts": 20, "streams": 19, "listeners": 14, "sparkLine": [], "hasVideo": false}, {"name": "#33 Andy im Team Lead Bewerbungsgespr\u00e4ch", "id": "2wPjvgc95eajkGJMhlmXFG", "url": "https://open.spotify.com/episode/2wPjvgc95eajkGJMhlmXFG", "releaseDate": "2022-08-23", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8acb2cd8c62544a6941ae299ea", "description": "Wie k&ouml;nnen Engineering Manager und Tech-Lead-Interviews aussehen?Jeder, der vom Individual Contributor in eine Engineering Manager und Tech-Lead-Rolle wechseln m&ouml;chte, muss sich Fragen aussetzen, die nichts mit Code zu tun haben. Fragen &uuml;ber Leadership Styles, Motivationen, Team-Entscheidungen, Business-Priorit&auml;ten, Selbst-Reflektion und Schw&auml;chen. Denn als Engineering Manager oder Tech-Lead gilt man als Multiplikator. In dieser Episode stellt Wolfgang seinem Co-Host Andy einfach mal die Fragen, die er damals Bewerbern gestellt hat, um sich selbst als Engineering Manager bei trivago zu ersetzen. Dies gibt einen guten Einblick, mit welchen Fragen Ihr so rechnen k&ouml;nnte, falls Ihr euch in eine &auml;hnliche Situation begebt.Bonus: Warum Wikingerschach der neue Sport ist und was eine Stra&szlig;enampel mit Continuous Integration zu tun hat.&nbsp;Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776LinksDALL-E 2: https://openai.com/dall-e-2/DALL-E 2: Original Bild https://labs.openai.com/s/xsdlCmW9w7xNygsV3xIlL2qJ&nbsp;Leadership-Style Laissez-faire: https://de.wikipedia.org/wiki/Laissez-faireprogrammier.barDEEP DIVE 108 &ndash; Astro mit Chris Swithinbank: https://www.programmier.bar/podcast/deep-dive-108-astro-mit-chris-swithinbankstability.ai: https://stability.ai/Wikingerschach (Kubb): https://de.wikipedia.org/wiki/KubbSimon Sinek: https://simonsinek.com/Bus-Faktor: https://de.wikipedia.org/wiki/Truck_NumberEngineering Kiosk #26 My English is not the yellow from the egg - Arbeiten in internationalen Teams: https://engineeringkiosk.dev/podcast/episode/26-my-english-is-not-the-yellow-from-the-egg-arbeiten-in-internationalen-teams/Traditional Leadership Vs. Servant Leadership: https://www.forbes.com/sites/forbescoachescouncil/2020/03/11/traditional-leadership-vs-servant-leadership/Leadership Styles: The 11 Most Common &amp; How to Find Your Style [Quiz]: https://blog.hubspot.com/marketing/leadership-stylesSprungmarken(00:00:00) Intro(00:00:33) AI-Generiertes Episoden-Cover mit DALL-E 2(00:07:09) Das heutige Thema: Leadership styles, eine Art Engineering Manager Interview und Wikingerschach (Kubb)(00:11:03) Kontext zu dem Interview, dem Team und den Interviewfragen(00:14:46) &quot;Warum m&ouml;chtest du &uuml;berhaupt eine Lead-Rolle &uuml;bernehmen?&quot;(00:19:10) &quot;Was w&auml;ren deine ersten drei Aktionen als neuer Engineering Manager?&quot;(00:22:29) &quot;Was ist dein Leadership-Style?&quot;(00:27:39) &quot;Wo ziehst du denn aus dem Alltag als Engineering Manager die Energie raus?&quot;(00:29:14) &quot;Wie verteilst du Projekte an Mitarbeiter, die keiner machen m&ouml;chte?&quot;(00:38:20) &quot;Wie w&uuml;rdest du die Innovation / Innovations-Bereitschaft in deinem Team erh&ouml;hen?&quot;(00:45:14) &quot;Hast du eine Herangehensweise, wie man mit anderen (hartn&auml;ckigen) Meinungen umgeht bzw. eine Pattsituation aufl&ouml;st?&quot;(00:53:31) &quot;Warum sollte ich dich nicht anstellen?&quot;(00:56:02) Interview-Abschluss und Retrospektive Betrachtung der Fragen(00:59:40) Outro und FeedbackHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 3654286, "starts": 25, "streams": 17, "listeners": 13, "sparkLine": [], "hasVideo": false}, {"name": "#32 Die richtigen Leute anstellen: Die Recruiting Pipeline", "id": "0B3LoAAfZbllsTw1KyYIjx", "url": "https://open.spotify.com/episode/0B3LoAAfZbllsTw1KyYIjx", "releaseDate": "2022-08-16", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8ae900e0acb38850990efc51a1", "description": "Recruiting: Einer der wichtigsten Aufgaben einer Firma - Doch worauf kommt es an?Leute kommen. Leute gehen. Fluktuation bzw. ein Jobwechsel ist ganz normal in der heutigen Zeit. Kaum jemand bleibt &quot;bis zur Rente&quot;. Doch worauf kommt es an, wenn man neues Personal f&uuml;r sein Team / Firma sucht? Wie viel Zeit soll man als Hiring Manager investieren? Wo findet man gute Leute? Welche Fragen sind die richtigen? Wie geht man damit um, wenn man sich nicht 100%ig sicher ist? Und wie trifft man die finale Entscheidung? All das und noch viel mehr behandeln wir in dieser Episode.Bonus: Warum Wolfgang eine Aufmerksamkeitsspanne wie ein Welpe hat, was Aufz&uuml;ge mit Recruiting zu tun haben und ob Wanne-Eickel wirklich existiert.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776Links&#8203;&#8203;German Tech Podcasts: https://engineeringkiosk.dev/deutsche-tech-podcasts/Episode #25 Tech-Entlassungswellen &amp; Job-Interview Skills: https://engineeringkiosk.dev/podcast/episode/25-tech-entlassungswellen-job-interview-skills/Best Practices zum Interview-Design https://triplebyte.com/blog/how-to-interview-engineers&nbsp;Ein must read klassiker https://www.joelonsoftware.com/2006/10/25/the-guerrilla-guide-to-interviewing-version-30/&nbsp;Gute Kandidat&sdot;innen werden auch kritische Fragen stellen, wie z.B. https://charity.wtf/2022/01/29/how-can-you-tell-if-the-company-youre-interviewing-with-is-rotten-on-the-inside/&nbsp;Moishe Lettvin - What I Learned Doing 250 Interviews at Google https://www.youtube.com/watch?v=r8RxkpUvxK0&nbsp;Sprungmarken(00:00:00) Intro(00:00:36) Perlenhochzeit beim Engineering Kiosk und das stoppen von Projekten(00:02:30) German Tech Podcasts(00:04:40) Das heutige Thema: Recruiting aus der Sicht des Arbeitgebers(00:06:35) Warum ist das Thema relevant? und was Recruiting mit Kultur zu tun hat(00:11:25) Sollte man &quot;Leute einstellen&quot; delegieren?(00:15:20) Wie viel Zeit sollte ein Hiring Manager ins Recruiting investieren?(00:18:05) Wie findet man die richtigen Leute? Wie wichtig sind pers&ouml;nliche Empfehlungen?(00:21:55) Die Entscheidung, ob du eine Person einstellst: False-Negatives vs. False-Positives(00:26:45) Der Recruiting-Prozess: Wen suche ich eigentlich?(00:29:15) Der Recruiting-Prozess: Was sind die richtigen Fragen, die ich stellen kann? (Strukturierte Interviews und Freestyle)(00:43:30) Der Bias &uuml;ber die Historie und vergangene Stationen von Kandidat-innen(00:50:15) Der Recruiting-Prozess: Die finale Entscheidung treffen(00:57:10) Die aktuelle Lage am Jobmarkt, die Kosten von Recruiting und Demotage(01:03:00) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 3868179, "starts": 24, "streams": 15, "listeners": 12, "sparkLine": [], "hasVideo": false}, {"name": "#31 Ich automatisiere mir die Welt wie sie mir gef\u00e4llt (mit GitHub Actions)", "id": "1vWJTaoipaGryKcGJOoUF6", "url": "https://open.spotify.com/episode/1vWJTaoipaGryKcGJOoUF6", "releaseDate": "2022-08-09", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8afd4db04822021d7988268932", "description": "Schuftest du noch oder automatisierst du schon?Heute gehts um die Faulheit von Entwicklern: Wir sprechen &uuml;ber GitHub Actions - Was es ist, wozu man es benutzen kann, wie es das eigene Leben erleichtern kann, wo der Unterschied zu Jenkins ist, wie das Engineering Kiosk es selbst einsetzt und welche Use-Cases von der Community oft genutzt werden.Bonus: Warum LinkedIn einen HTTP Status Code 999 sendet, wann wir Programmiersprachen wie Unterhosen wechseln und was Michael &quot;Bully&quot; Herbig mit der ganzen Sache zu tun hat.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776Links&#8203;&#8203;Dependabot: https://github.blog/2020-06-01-keep-all-your-packages-up-to-date-with-dependabot/Engineering Kiosk #13 Produktivit&auml;t: https://engineeringkiosk.dev/podcast/episode/13-produktivit%C3%A4t/Engineering Kiosk #26 My English is not the yellow from the egg - Arbeiten in internationalen Teams: https://engineeringkiosk.dev/podcast/episode/26-my-english-is-not-the-yellow-from-the-egg-arbeiten-in-internationalen-teams/Engineering Kiosk #27 Sicherheit in der Dependency H&ouml;lle: https://engineeringkiosk.dev/podcast/episode/27-sicherheit-in-der-dependency-h%C3%B6lle/Engineering Kiosk #21 Static Site Generators &amp; DIE Webseite: https://engineeringkiosk.dev/podcast/episode/21-static-site-generators-die-webseite/Deutschsprachige Tech Podcasts: https://engineeringkiosk.dev/deutsche-tech-podcasts/ und https://github.com/EngineeringKiosk/GermanTechPodcastsGitHub Actions: https://github.com/features/actionsNetlify: https://www.netlify.com/GitHub Actions Marketplace: https://github.com/marketplace?type=actionsJenkins: https://www.jenkins.io/GitHub Pull Request Auto Merge: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/automatically-merging-a-pull-requestPodcastIndex: https://podcastindex.org/GitHub Actions vom GermanTechPodcast Repository: https://github.com/EngineeringKiosk/GermanTechPodcasts/tree/main/.github/workflowsGitHub Action um Code zu Comitten (stefanzweifel/git-auto-commit-action): https://github.com/stefanzweifel/git-auto-commit-actionGitHub Action um ein anderes Repository zu triggern (peter-evans/repository-dispatch): https://github.com/peter-evans/repository-dispatchRepository von der Engineering Kiosk: https://github.com/EngineeringKiosk/webpageDeep-Dive zu Astro in der Programmierbar: https://www.programmier.bar/podcast/deep-dive-108-astro-mit-chris-swithinbankGitHub Personal Access Tokens: https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-tokenGitHub Actions Secrets: https://docs.github.com/en/actions/security-guides/encrypted-secretsGitHub Actions Output: https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobsPodcast sync-Python Script von der Engineering Kiosk Webpage: https://github.com/EngineeringKiosk/webpage/blob/main/scripts/sync-german-tech-podcasts.pyFreie (private) Repositories bei GitHub: https://github.blog/2019-01-07-new-year-new-github/Link Checker Lychee: https://github.com/lycheeverse/lycheeGitHub Profil von Andy Grunwald: https://github.com/andygrunwaldInner Source: https://de.wikipedia.org/wiki/Inner_SourceGitHub Actions Awesome-List: https://github.com/sdras/awesome-actionsGitHub Actions Hackathon: https://githubhackathon.com/Sprungmarken(00:00:00) Intro(00:00:31) E-Mails von GitHub(00:03:11) Deutschsprachige Tech Podcasts: Eine kuratierte Liste von deutschsprachigen Tech-Podcasts(00:07:35) Heutiges Thema: Automatisierung mit GitHub Actions und Attribut bei Software Engineers: Disziplin oder Faulheit(00:10:07) Was GitHub Actions ist und was Wolfgang bereits dar&uuml;ber wei&szlig;(00:14:47) Wie sieht die GitHub Automation beim GermanTechPodcast Repository aus?(00:26:19) Einen GitHub Actions Workflow in einem anderen Repository triggern(00:29:03) GitHub Actions und Passw&ouml;rter, API-Keys und andere Geheimnisse und Isolation von einzelnen GitHub Actions(00:34:56) Was passiert bei der Engineering Kiosk Website, wenn das GitHub Actions-Event entgegen genommen wird(00:39:50) GitHub Actions im professionellen Umfeld, ist Jenkins noch relevant und Limitierungen mit privaten Netzwerken(00:46:30) Link-Checking in GitHub Actions mit Lychee und automatische GitHub Issue Erstellung(00:50:21) Eigene Profile-README mit GitHub Actions updaten(00:52:52) Wo liegen die GitHub Action Workflows?(00:53:37) GitHub Action um Inner Source und Cross-Team Contributions zu f&ouml;rdern(00:55:25) GitHub Actions um Stale Issues zu schlie&szlig;en(00:56:59) Aufruf um GitHub Actions zu testen und neue Contributor zu begr&uuml;&szlig;en(00:58:28) Feedback und OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 3675060, "starts": 30, "streams": 25, "listeners": 14, "sparkLine": [], "hasVideo": false}, {"name": "#30 Ist ein Informatikstudium sinnvoll? Welche Ausbildung f\u00fcr Devs?", "id": "3XW8vkTOnDwbO1Y2O6HDsN", "url": "https://open.spotify.com/episode/3XW8vkTOnDwbO1Y2O6HDsN", "releaseDate": "2022-08-02", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8ab9c10da1e39bcf622aa0fe46", "description": "Wie wichtig ist die Universit&auml;t und ein Studium f&uuml;r den heutigen Beruf als Software Entwickler&sdot;in?Diese bzw. &auml;hnliche Fragen haben wir von unseren H&ouml;rer&sdot;innen zugesendet bekommen: Welche Unterschiede gibt es in den Ausbildungen? Wie relevant ist eine schulische oder berufliche Ausbildung? Sollte man ein Bachelor, Masterstudium machen? Und w&uuml;rden wir den Weg zum Dr. Titel empfehlen? Haben Akademiker nur Vorteile? Oder auch Nachteile bei der Jobsuche und beim Job selbst? Und wie kann man als Nicht-Studierte oder Quereinsteiger in der IT-Industrie Fu&szlig; fassen?All das und noch viel mehr in der Episode.Bonus: Was akademischer Spa&szlig;, Beleidigungen und Serdar Somuncu mit der ganzen Thematik zu tun haben.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776LinksFOM / Fachhochschule f&uuml;r Oekonomie und Management: https://www.fom.de/Das &ouml;sterreichische Bildungssystem: https://www.bmbwf.gv.at/Themen/schule/schulsystem/sa.html&nbsp;Das deutsche Bildungssystem: https://www.kmk.org/dokumentation-statistik/informationen-zum-deutschen-bildungssystem.html&nbsp;Sprungmarken(00:00:00) Intro(00:00:50) Hat die akademische Laufbahn, Wolfgang zu einem besseren Software-Entwickler gemacht?(00:04:53) Unterschied zwischen der schulischen und beruflichen Ausbildung?(00:12:06) Haben Leute von spezifischen Universit&auml;ten / Schulen mehr drauf als andere?(00:14:10) Das heutige Thema: Wie wichtig ist die Uni / akademische Ausbildung f&uuml;r den Job in der IT?(00:15:11) Andys Erfahrung auf der privaten Hochschule(00:19:14) Abschl&uuml;sse von privaten Hochschulen und wie diese in der Industrie angesehen werden k&ouml;nnen(00:20:52) K&ouml;nnen akademische Abschl&uuml;sse auch hinderlich sein?(00:24:24) Over-Engineering, unsch&ouml;ner Quellcode und wissenschaftliches Arbeiten von Leuten mit Dr. Titel - Erfahrungen von der Universit&auml;t(00:30:27) Unterschiede in der Arbeit und Guidance vom Manager(00:31:45) Gibt es Unterschiede in der Entwicklung/Einstellung von Leuten im Beruf mit oder ohne akademische Ausbildung?(00:36:01) Sind alle Personen anpassungsf&auml;hig an eine bestimmte Arbeitsweise?(00:40:13) Kann &quot;akademisch&quot; ein Schimpfwort sein?(00:43:58) Wissbegierig, Neugierig, Resistenz und Motivation sind viel wichtiger(00:48:30) Ist ein Studium empfehlenswert f&uuml;r einen Job in der IT? Und bringt mich das bei der Jobsuche weiter?(00:55:17) Ist ein fehlendes Studium ein m&ouml;glicher Karriere-Blocker?(00:58:30) Sollten Quereinsteiger bei einer kleineren Firma starten?(01:00:17) Wie sollten Sch&uuml;ler vorgehen? Ein Studium oder direkter Berufseinstieg?(01:03:15) W&uuml;rdest du Leuten mit Studium einen den Weg zum Doktor empfehlen?(01:04:34) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 3936071, "starts": 14, "streams": 13, "listeners": 9, "sparkLine": [], "hasVideo": false}, {"name": "#29 Die andere Seite: Meetups & Konferenzen organisieren", "id": "3WQWuMUtFz3RcxJB2VJiNB", "url": "https://open.spotify.com/episode/3WQWuMUtFz3RcxJB2VJiNB", "releaseDate": "2022-07-26", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a7a143efb98b4fb11dff74324", "description": "Meetups und Konferenzen: Ein wichtiger Bestandteil der Tech-Community und als Plattform f&uuml;r den Wissenstransfer.Jeder kennt Meetups und Konferenzen. Firmen sponsern Meetups und geben Mitarbeitern sogenannte Konferenz-Budgets. Doch wie sieht es hinter den Kulissen aus? Was bedeutet es ein Meetup zu organisieren? Welche Herausforderungen und Chancen bietet es? Wie viel Zeitaufwand ben&ouml;tigt es, ein Meetup auf die Beine zu stellen? Und ist es das gleiche wie die Organisation einer Konferenz?In dieser Episode wird Andy, als Organisator des Web Engineering Meetups D&uuml;sseldorf und der localhost-Konferenz, genau zu diesem Thema interviewed.Bonus: Was die Zeitschrift Computer Bild und Fortuna D&uuml;sseldorf mit Meetups zu tun haben.Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776Gerne behandeln wir auch euer Audio Feedback in einer der n&auml;chsten Episoden, einfach Audiodatei per Email oder WhatsApp Voice Message an +49 15678 136776LinksFest und Flauschig: https://open.spotify.com/show/1OLcQdw2PFDPG1jo3s0wbpLocalhost-Konferenz: https://localhost.engineering/Web Engineering Meetup D&uuml;sseldorf: https://www.meetup.com/de-DE/web-engineering-duesseldorf/PHP Usergroup D/DU/KR auf XING: https://www.xing.com/communities/groups/php-usergroup-d-strich-du-strich-kr-5b80-1021668/postsWebworker NRW Meetup: https://www.meetup.com/de-DE/webworker-nrw/Lean Coffee: https://t2informatik.de/wissen-kompakt/lean-coffee/Explain Like I'm Five: https://www.reddit.com/r/explainlikeimfive/Lessons learned from running a local meetup: https://andygrunwald.com/blog/lesson-learned-from-running-a-local-meetup/Sprungmarken(00:00:00) Intro(00:00:36) Sommerpausen, Ferien und Release-Cycle(00:03:06) Empfehlungs-Algorithmen von Podcast-Plattformen(00:04:38) Der nachteil der Sommerzeit? Keine Meetups und Konferenzen(00:05:17) Wie gro&szlig; ist das Web Engineering Meetup D&uuml;sseldorf und wie lange habt Ihr Pause gemacht?(00:06:16) Das heutige Thema: Die Organisation von Meetups und Konferenzen(00:07:06) Wann hat Andy mit Usergroups und Meetups gestartet?(00:09:51) Wie viele Leute kommen denn ca. zu den Treffen?(00:11:44) Wie schwierig ist es ein Meetup zum laufen zu bekommen?(00:13:28) Das Thema der No-Show-Rate bei Meetups(00:14:32) Was war der Planungsaufwand f&uuml;r die ersten Events?(00:16:02) Wie hast du die ersten Speaker gefunden?(00:18:28) Was ist es f&uuml;r ein monatlicher Zeitaufwand f&uuml;r die Meetup-Organisation?(00:20:01) Wie wird man das Firmenbranding von einem Meetup los?(00:26:53) Was hat sich bei den Firmen in Bezug auf Meetups in den letzten 10 Jahren ge&auml;ndert?(00:30:23) Welche Tipps haben wir f&uuml;r die Firmen, die sich bei Meetups pr&auml;sentieren?(00:33:24) Recruitern auf Meetups und Regeln / Code of Conduct(00:35:56) Monetarisierung von Meetups und Motivation von Organisatoren(00:39:34) Der n&auml;chste Schritt: Eine eigene Konferenz(00:42:27) Wo ist der organisatorische Unterschied zwischen einem Meetup und einer Konferenz?(00:49:00) Neue Meetups: Lieber Online? Lieber Offline? Lieber Hybrid?(00:51:25) Online Meetups bieten einen gr&ouml;&szlig;eren Zugang, deswegen mehr Konkurrenz?(00:54:37) Was w&uuml;rdest du als Start-Tip neuen Organisatoren zur Gr&uuml;ndung mitgeben?(01:03:15) Online oder Offline-Meetups und eure Initiative(01:05:42) Die Checkliste zur Organisation eines Meetups(01:08:04) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Feedback (gerne auch als Voice Message)Email: stehtisch@engineeringkiosk.devTwitter: https://twitter.com/EngKioskWhatsApp +49 15678 136776", "explict": false, "language": "de", "duration": 4128498, "starts": 6, "streams": 5, "listeners": 3, "sparkLine": [], "hasVideo": false}, {"name": "#28 O(1), O(log n), O(n^2) - Ist die Komplexit\u00e4t von Algorithmen im Entwickler-Alltag relevant?", "id": "1V1n57J1JlwQvq6liID45p", "url": "https://open.spotify.com/episode/1V1n57J1JlwQvq6liID45p", "releaseDate": "2022-07-19", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a5578bf365866b6a0aed70222", "description": "Beim Programmieren ist alles ein Algorithmus. Irgendwie zumindest. Doch wie misst man die Zeitkomplexit&auml;t?Das ganze nennt sich Big-O-Notation, oder zu deutsch &quot;Bachmann-Landau-Notation&quot;. Eigentlich ein recht trockenes Thema, doch auch irgendwie relevant in der heutigen Zeit von verteilten Systemen und gro&szlig;en Datenmengen. Doch was ist die Big-O-Notation? Was sagt sie aus? Wo kommt diese in der Praxis vor? Und inwieweit hat das ganze noch eine Relevanz in Zeiten von Cloud Computing und fast unbegrenzten Hardware-Ressourcen? Darum geht es in dieser Episode.Bonus: Wie Andy und Wolfgang in deutscher Grammatik belehrt werden, ob es OK ist in 1on1s zu fluchen und das Hash-Kollisionen mit der ganzen Sache zu tun haben.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksPocket Casts: https://pocketcasts.com/Learn Redis the hard way (in production): https://tech.trivago.com/post/learn-redis-the-hard-way/Redis KEYS Befehl: https://redis.io/commands/keys/Redis HSET Befehl: https://redis.io/commands/hset/kSQL: https://www.confluent.io/de-de/blog/ksql-streaming-sql-for-apache-kafka/Engineering Kiosk auf LinkedIn: https://www.linkedin.com/company/engineering-kiosk/Sprungmarken(00:00:00) Intro(00:00:49) Intro: Feedback zur Episode #26 - Deutschland spricht schlecht Englisch(00:03:55) Intro: Feedback zur Grammatik - Der, die oder das Kommentar(00:06:05) Wer h&ouml;rt denn so alles das Engineering Kiosk?(00:07:09) Podcast-Player: Pocket Casts(00:08:32) Was sind die Sachen, die oft sinnvoll sind, du aber doch vergessen hast?(00:10:34) Das heutige Thema: Big-O Notation / Bachmann-Landau Notation (Zeitkomplexit&auml;t von Algorithmen)(00:13:33) Warum ist die Big-O Notation / Bachmann-Landau Notation relevant(00:15:24) Wo war es das letzte mal wo dir die Big-O Notation vorgekommen ist(00:16:05) Was ist die Big-O Notation / Bachmann-Landau Notation?(00:20:59) Geben wir den best, average oder worst-case der Big-O Notation / Bachmann-Landau Notation an?(00:25:15) Konstanten k&ouml;nnen zur Vereinfachung einfach weggelassen werden(00:27:00) Big-O Notation bei redis: Die Story wie Andy damit in Ber&uuml;hrung kam(00:31:16) Zeitkomplexit&auml;t vs. Space-Complexity / Raumkomplexit&auml;t: Zeit vs. Memory(00:32:58) Gibt es was besseres als O(1)?(00:34:26) Ist das setzen eines Keys in einer Hashmap immer O(1)?(00:40:03) Inwieweit kann man die Big-O Notation / Bachmann-Landau Notation auf Datenbanken mappen?(00:42:07) Wie relevant ist die Optimierung der Big-O Notation in Zeiten von Cloud und schnellen Servern eigentlich noch?(00:45:52) Batch-Processing vs. Streaming und die Optimierung von Algorithmen(00:48:49) Optimierungen von Algorithmen in JavaScript / auf Client-Seite(00:52:06) Optimierungen k&ouml;nnen auch schlecht sein bzw. schlecht aussehen(00:53:09) Outro mit FlachwitzenHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3333293, "starts": 10, "streams": 7, "listeners": 5, "sparkLine": [], "hasVideo": false}, {"name": "#27 Sicherheit in der Dependency H\u00f6lle", "id": "1PFpdXNHVvRgGPPUxC59Te", "url": "https://open.spotify.com/episode/1PFpdXNHVvRgGPPUxC59Te", "releaseDate": "2022-07-12", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a20067b03230f29a843a6b9d9", "description": "Was haben die JavaScript Pakete left-pad, color, faker und cross-env gemeinsam? Alle waren in npm Package Sicherheits-Incidents involviert.Wenn man sich die Anzahl von Javascript Abh&auml;ngigkeiten bei Mittelgro&szlig;en Projekten ansieht, ist eine dreistellige Anzahl an JavaScript Paketen nicht un&uuml;blich. Das liegt prim&auml;r an der &uuml;berschaubaren Gr&ouml;&szlig;e der Pakete und somit der Funktionalit&auml;t. Alles nur, um Pakete verwaltbarer zu halten. Doch dieser Umstand macht das JavaScript-Ecosystem so attraktiv f&uuml;r Angreifer oder kann zu extremen Seiteneffekten f&uuml;hren. In dieser Episode sprechen wir drei npm Package Incidents durch, was es damit aufsich hatte, welche Attack-M&ouml;glichkeiten es noch gibt und wie man sich als Software Entwickler dagegen sch&uuml;tzen kann.Bonus: Was Bademeister, Blubberwasser und eine ASCII-Repr&auml;sentation von Uncle Sam und der amerikanischen Flagge mit JavaScript zu tun haben.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksFilm &quot;Die Bademeister&quot;: https://www.imdb.com/title/tt0202806/Open Source Studien: https://t3n.de/news/wirtschaft-open-source-nutzt-5-1451923/ und https://www.bitkom.org/Presse/Presseinformation/Open-Source-ist-in-der-deutschen-Wirtschaft-angekommen&nbsp;Media Tech Lab: http://jump.engineeringkiosk.dev/media-tech-lab&nbsp;Buch &quot;Working in Public: The Making and Maintenance of Open Source Software&quot;: https://www.amazon.de/Working-Public-Making-Maintenance-Software/dp/0578675862Auch Python und PHP sind betroffen: https://twitter.com/s0md3v/status/1529005758540808192 und https://twitter.com/s0md3v/status/1529049336268869633JavaScript left-pad: https://www.npmjs.com/package/left-padMessaging-App Kik: https://www.kik.com/E-Mail-Verkehr zwsichen npm, Kik und Azer Ko&ccedil;ulu zum left-pad Paket: https://medium.com/@mproberts/a-discussion-about-the-breaking-of-the-internet-3d4d2a83aa4dStatement vom npm CTO &quot;Laurie Voss&quot; zur Wiederherstellung des left-pads Paket: https://twitter.com/seldo/status/712414588281552900Zalgo Text: https://en.wikipedia.org/wiki/Zalgo_textDev corrupts NPM libs 'colors' and 'faker' breaking thousands of apps: https://www.bleepingcomputer.com/news/security/dev-corrupts-npm-libs-colors-and-faker-breaking-thousands-of-apps/node-ipc: Open Source Maintainer Sabotages Code to Wipe Russian, Belarusian Computers: https://www.vice.com/en/article/dypeek/open-source-sabotage-node-ipc-wipe-russia-belraus-computerstyposquatting-Attacke mit npm Paketen (u.a. cross-env): https://snyk.io/blog/typosquatting-attacks/Bank pushed privaten Code mit npm: https://twitter.com/seldo/status/110515328771872358412 Factor App: https://12factor.net/de/GitHub DMCA Takedowns: https://github.com/github/dmcanpm package scopes: https://docs.npmjs.com/about-scopesDependabot: https://github.blog/2020-06-01-keep-all-your-packages-up-to-date-with-dependabot/&nbsp;Harden GitHub Actions - Pin actions to a full length commit SHA: https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-third-party-actionsWeitere nicht behandelte Incidentsua-parser.js (malicious code / account hijack): https://github.com/advisories/GHSA-pjwm-rvh2-c87wcoa (malicious code): https://github.com/advisories/GHSA-73qr-pfmq-6rp8rc (malicious code): https://github.com/advisories/GHSA-g2q5-5433-rhrfpurescript (malicious code by dependencies): https://harry.garrood.me/blog/malicious-code-in-purescript-npm-installer/event-stream (new maintainer injected code to steal bitcoins / social engineering): https://blog.npmjs.org/post/180565383195/details-about-the-event-stream-incidentgetcookies (backdoor): https://blog.npmjs.org/post/173526807575/reported-malicious-module-getcookies.htmlSprungmarken(00:00:00) Intro(00:00:35) Intro: 10.000 Downloads und Die Bademeister(00:01:42) Wie viele Firmen setzen (bewusst) Open Source ein?&nbsp;&nbsp;(00:04:09) Wie viele Firmen unterst&uuml;tzen Open Source finanziell?(00:06:22) Open Source Funding via Media Tech Lab(00:08:11) Das Management von Software-Dependencies anhand des JavaScript-Ecosystems via npm(00:08:59) Warum JavaScript als Beispiel genutzt wird und die Theorie warum JavaScript Pakete so klein sind und viele Abh&auml;ngigkeiten haben(00:15:06) npm Package Incident: Das Paket &quot;left-pad&quot; wurde aus der npm Registry entfernt (unpublished)(00:23:06) npm Package Incident: Die Pakete &quot;color&quot; und &quot;faker&quot; geben Textm&uuml;ll auf der Konsole aus(00:27:29) npm Package Incident: Das Paket &quot;cross-env&quot; und der typosquatting-Angriff mit &quot;crossenv&quot;(00:33:01) Weitere Angriffs-Vektoren in Bezug auf Software Dependencies: B&ouml;swilliger Maintainer, Schadcode in Sub-Dependency, Account-&Uuml;bernahme und die falsche Package Registry(00:40:23) Ein L&ouml;sungsweg: npm package scopes(00:42:02) Weitere L&ouml;sungswege: Schadcode und fr&uuml;here Fraud-Detection auf Plattform-Seite, die &Uuml;berwachung von direkten Dependencies und Version-Pinning(00:47:40) Dependabot: Versionen von Dependencies automatisch updaten und auf neue Dependencies achten(00:53:44) Der gesunde Streit: Zanken und Bierchen(00:54:17) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3378303, "starts": 8, "streams": 6, "listeners": 7, "sparkLine": [], "hasVideo": false}, {"name": "#26 My English is not the yellow from the egg - Arbeiten in internationalen Teams", "id": "0S8AoLpiO35S3Lc06mKmQz", "url": "https://open.spotify.com/episode/0S8AoLpiO35S3Lc06mKmQz", "releaseDate": "2022-07-05", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8aade1dcc6dd1856ec14629a65", "description": "Der Gro&szlig;teil der IT-Ressourcen wie Dokumentationen, Websites, Pr&auml;sentationen in Englisch, doch was ist wenn man selbst von sich sagt &quot;My english is not the yellow from the egg&quot;?Diese Episode dreht sich ganz um die englische Sprache und das Arbeiten in internationalen Teams: Welche H&uuml;rden haben die meisten deutschen in Bezug auf die englische Sprache? Wie kann man diese &uuml;berkommen und sicherer mit der englischen Sprache werden? Und was passiert, wenn ich auf der Arbeit auf einmal Englisch sprechen muss? Wie ver&auml;ndert sich mein Arbeitsumfeld, wenn das Team international zusammengestellt ist? Was muss ein Arbeitgeber im Kopf behalten, wenn sich das Team international entwickeln soll? Und wie verh&auml;lt sich aktuell die Remote-Arbeit mit der ganzen Thematik? All das und noch mehr in dieser Episode.Bonus: Russische Software-Code-Kommentare, die Vertonung von Hollywood Filmen und schnelle deutsche ALDI Kassierer.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksDeepL: https://www.deepl.com/de/translatorGrammarly: https://www.grammarly.com/Buch &ldquo;When Cultures Collide&rdquo;: https://www.amazon.de/When-Cultures-Collide-Managing-Successfully/dp/1857880862/Sub-Reddit de_EDV: https://www.reddit.com/r/de_EDVSprungmarken(00:00:00) Intro(00:00:46) Ein Dankesch&ouml;n an unsere H&ouml;rer und Deutschlernen mit dem Engineering Kiosk(00:04:52) Das heutige Thema: Das Arbeiten in internationalen Teams(00:05:58) Ein Team, alle deutschsprachig, ein internationale Person: Welche Sprache soll gesprochen werden?(00:13:00) Source-Code-Kommentare in Russisch(00:14:42) Offizielle Team- und Firmen-Sprache(00:16:49) Support von der Firma zum lernen der Firmensprache(00:17:18) Ohne die deutsche Sprache ist man in Deutschland aufgeschmissen(00:23:26) Englisch in der Universit&auml;t(00:25:06) Englisch als Chance: Der Lern-Einstieg und &Uuml;bung macht den Meister(00:29:51) Als nicht deutscher in einer deutschen Gruppe: Was kann dies f&uuml;r Folgen haben?(00:35:41) H&ouml;ren wir mehr Englisch im Alltag und um uns herum?(00:37:54) Wie &auml;ndert sich die Softwareentwicklung selbst&nbsp;und im Team in einem internationalen Team?(00:44:42) Die Entwicklung von internationalen Produkten erfordern internationale Teams(00:47:08) H&uuml;rden f&uuml;r den Arbeitgeber bei der Einstellung von internationalen Leuten(00:52:34) Schwierigkeiten bei der Zusammenarbeit in einem internationalen Team(00:58:23) Erste Erfahrungen in internationalen Teams in Open Source(01:01:23) Remote-Work f&ouml;rdert internationale Arbeitsumgebungen(01:04:02) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3970467, "starts": 9, "streams": 8, "listeners": 3, "sparkLine": [], "hasVideo": false}, {"name": "#25 Tech-Entlassungswellen & Job-Interview Skills", "id": "5vSicTXfw07adEdvQGPQUd", "url": "https://open.spotify.com/episode/5vSicTXfw07adEdvQGPQUd", "releaseDate": "2022-06-28", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a55ca9b599037011da6c4861d", "description": "Interviews als Bewerber zu f&uuml;hren ist nicht immer leicht. Oft hat man das Gef&uuml;hl, dass man sich &ldquo;Beweisen&rdquo; muss. Doch muss das wirklich so sein?Besonders im Tech-Sektor sind Whiteboard-Challenges und Coding-Interviews der Endgegner. Viele Bewerber sind aber schon vorher nerv&ouml;s, stammeln, stehen unter Druck und sind ggf. nicht sich selbst. In dieser Episode sprechen wir mal ein wenig &uuml;ber die aktuelle Lage im Tech-Sektor in Bezug auf Layoffs, und falls man eine neue Firma sucht, wie man an ein Interview locker und sicher ran geht. Wir kl&auml;ren wie heutzutage eine Bewerbung aussehen kann, was man vor dem eigentlichen Interview tun kann, um herauszustechen, wie man sich im Interview verh&auml;lt und aus dem &ldquo;Frage-Antwort-Spiel&rdquo; eine ordentliche Konversation auf Augenh&ouml;he macht aber auch wie man den Endgegner, die Coding Challenge, meistern kann.Bonus: Warum Wolfgang nur Kaffee in Portugal trinkt und was ein Gehsteig, B&uuml;rgersteig und Klettersteig gemeinsam haben.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksHackerRank: https://www.hackerrank.com/StackOverflow: https://stackoverflow.com/Xing: https://xing.de/LinkedIn: https://www.linkedin.com/Buch &ldquo;Cracking the Coding Interview&rdquo;: https://www.amazon.de/Cracking-Coding-Interview-6th-Programming/dp/0984782850/Sprungmarken(00:00:00) Intro(00:00:49) Intro: Kultureller Anspruch mit Portugal, Verkehrsmittel, Braindrain, Einwanderung(00:04:41) Portugal als Tech-Hub: Startups und Web-Summit(00:06:33) Aktuelle Lage in der Startup/Scale-Up Welt: Layoffs, Fachkr&auml;ftemangel und Welt-Krisen(00:16:52) Das heutige Thema: Interviews aus der Sicht des Bewerbers(00:19:37) Der Lebenslauf: Was soll rein, was soll nicht rein(00:28:01) Internet-Profile wie LinkedIn und XING(00:30:06) Arbeitszeugnisse, pers&ouml;nliche Referenzen, das Anschreiben und der personalisierte Lebenslauf(00:35:47) Anforderungen an den Job, eure Qualifikation, Referenzen und Background-Checks(00:38:21) Was man vor dem Interview bereits tun kann(00:43:52) Wie Ihr das Interview sehen solltet: Bidirektional und Gl&uuml;ck(00:45:52) Wie ist die generelle Struktur eines Interviews und wie viel Redezeit ist angebracht?(00:55:05) Das Interview selbst: Der technische Test bzw. die Hardskill-Evaluation(01:01:42) Verhaltens-Fragen im Interview (Selbst-Reflektion und Team-Arbeit) und Fragenkatalog(01:04:12) Architektur-Fragen bei der Software-Entwicklung: Setze den Kontext(01:06:33) Vorbereitung auf Interviews durch Interviews, auch wenn man keinen neuen Job sucht(01:11:17) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 4376741, "starts": 12, "streams": 8, "listeners": 7, "sparkLine": [], "hasVideo": false}, {"name": "#24 Infrastructure as Code oder old man yells at cloud", "id": "5ZDmHWPWsvB4ok4kFEi91V", "url": "https://open.spotify.com/episode/5ZDmHWPWsvB4ok4kFEi91V", "releaseDate": "2022-06-21", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a370371e904c7b6bf29b24502", "description": "Old man yells at cloud - Oder: Wie managed man seine Infrastruktur mit Stil (und Software)Anders als gewohnt nimmt in dieser Episode Andy die Dozenten-Rolle ein und beantwortet Wolfgang all seine Fragen zum Thema Infrastructure as Code. Wir kl&auml;ren wozu man das ganze eigentlich braucht, was Terraform und Pulumi ist, kl&auml;ren &uuml;ber einen weit verbreiteten Mythos auf, wo der Unterschied zwischen Infrastructure Orchestration und Configuration Management ist, was das beste Configuration Management Tool ist und wo es Herausforderungen bei der Verwendung von Infrastructure as Code gibt.Bonus: Was ein Data Engineer ist, ob Wolfgang Holz-Clogs tr&auml;gt und wie Deutschland mit dem 9&euro; Ticket umgeht.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinks&ldquo;Old man yells at cloud&rdquo; Herkunft: https://knowyourmeme.com/memes/old-man-yells-at-cloud&nbsp;Zeit &quot;Servus Gr&uuml;ezi Hallo&quot; Podcast &quot;Die passen doch niemals alle rein&quot;: https://www.zeit.de/gesellschaft/2022-06/9-euro-ticket-klimaticket-oesterreich-politikpodcast&nbsp;Terraform: https://www.terraform.io/Pulumi: https://www.pulumi.com/AWS Cloud Formation: https://aws.amazon.com/de/cloudformation/Saltstack: https://github.com/saltstack/saltAnsible: https://www.ansible.com/Puppet: https://puppet.com/Chef: https://www.chef.io/products/chef-infraCFEngine: https://cfengine.com/Terraform &quot;depends_on for providers&quot; bug: https://github.com/hashicorp/terraform/issues/2430Hetzner Terraform Provider: https://registry.terraform.io/providers/hetznercloud/hcloud&nbsp;Sprungmarken(00:00:00) Intro(00:00:46) Was ist ein Data Engineer? Und wie spielt ein Data Analyst und Data Scientist da rein?(00:05:00) Das 9&euro; Ticket in Deutschland und das Klima-Ticket in &Ouml;sterreich(00:08:23) Heutiges Thema: Infrastructure as Code(00:09:27) Was ist DevOps und warum es keine Stellenbeschreibung oder Person ist(00:10:52) Warum niemand sich selbst als Spezialist ansieht(00:11:44) Was ist eigentlich Infrastructure as Code?(00:17:41) Was bringt mir Infrastructure as Code eigentlich?(00:20:55) Mythos: Code ist einmal definiert, und auf alle Cloud Provider anwendbar(00:22:25) Warum nutzen wir dann nicht die Cloud spezifische Sprache, wie zum Beispiel Cloud Formation von Amazon Web Services?&nbsp;(00:24:08) Bin ich schneller, wenn ich die Cloud migrieren m&ouml;chte und die Infrastruktur bereits als Code definiert habe?(00:27:05) Zur&uuml;ck zu: Warum braucht man Infrastructure as Code eigentlich?(00:29:14) Wo ist der Unterschied zwischen Ansible und Terraform?(00:34:12) Wird Configuration Management wie Ansible heutzutage noch gebraucht?(00:36:25) Was sind Terraform Provider?(00:39:53) Was ist denn das beste Configuration Management-Tool: Ansible, Salt, Chef, Puppet, CFEngine oder Bash-Scripte?(00:45:34) Was sind Nachteile von Infrastructure as Code?(00:57:55) Zusammenfassung der Episode und OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3712976, "starts": 10, "streams": 6, "listeners": 6, "sparkLine": [], "hasVideo": false}, {"name": "#23 Schaltest du noch oder automatisiert du schon: Home Automation", "id": "36a2YKzzvfrrRzM3qZTHaC", "url": "https://open.spotify.com/episode/36a2YKzzvfrrRzM3qZTHaC", "releaseDate": "2022-06-14", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a0ad9ab4073515624b9f57d8f", "description": "Machst du noch selbst das Licht an oder automatisiert du schon?Internet of Things (IoT) ist in aller Munde. Jedes Device trackt irgendwas mit. Doch was kann man damit machen? Home Automation ist das richtige Stichwort. Und daf&uuml;r braucht man kein eigenes Haus oder ein abgeschlossenes Studium. In dieser Episode geben Andy und Wolfgang einen praktischen Einblick und wie man am einfachsten selbst loslegen kann. Weiterhin versuchen wir euch mit unseren Learnings vor schlimmerem zu bewahren. Viel Spa&szlig; beim automatisieren.Bonus: Warum der Grundriss von Andys Wohnung nun in China ist und warum bald alle H&ouml;rer&#8729;innen nackig durch ihre Wohnung rennen.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksXiaomi: https://www.mi.com/deStaubsauger-Roboter Open Source Software: https://github.com/Hypfer/ValetudoHomematic Rauchmelder: https://de.elv.com/homematic-funk-rauchmelder-hm-sec-sd-2-mit-10-jahres-batterie-131408FHEM: https://fhem.de/Home Assistant: https://www.home-assistant.io/Raspberry Pi: https://www.raspberrypi.com/Ikea Tradfri: https://www.ikea.com/de/de/search/products/?q=TR%C3%85DFRIAndys Conbee 2 Zigbee USB-Stick: https://phoscon.de/de/conbee2Wolfgangs Zigbee Stick aus K&ouml;ln: https://slae.sh/projects/cc2652/ (basiert auf CC2652 und H&auml;nde weg von Texas Instruments CC2531 Chips, die sind zu alt und schwach)Empfohlene Zigbee Sticks: https://www.zigbee2mqtt.io/guide/adapters/#recommended&nbsp;Zigbee im Mars Rover: https://www.zdnet.com/home-and-office/networking/zigbee-inside-the-mars-perseverance-mission-and-your-smart-home/&nbsp;sqlite: https://www.sqlite.org/Homematic: https://www.eq-3.de/produkte/homematic.htmlMQTT: https://de.wikipedia.org/wiki/MQTTMosquitto MQTT Broker: https://mosquitto.org/Zigbee2MQTT: https://www.zigbee2mqtt.io/Ordroid: https://www.hardkernel.com/Tasmota: https://github.com/arendst/TasmotaShelly: https://shelly.cloud/OpenHAB: https://www.openhab.org/NodeRED: https://nodered.org/ioBroker: https://www.iobroker.net/Sprungmarken(00:00:00) Intro(00:01:49) Home Automation - Warum ist das Thema &uuml;berhaupt relevant?(00:04:22) Was ist unsere Einstiegsdroge als Intro ins Thema Home Automation? Spoiler: Vernetzte Rauchmelder(00:07:06) Internet of Things (IoT) ist &uuml;berall(00:07:49) Was wir in dieser Home Automation Folge behandeln und was nicht(00:11:08) Wie startet man mit Heimautomatisierung &quot;the lean way&quot;?(00:16:22) Was ist Home Assistant?(00:19:37) Wie sieht Wolfgangs Home Automation Setup aus? (mit einem Einstieg zu Zigbee und Zigbee Mesh)(00:22:20) Wie sieht Andys Home Automation Setup aus?(00:24:58) Was ist MQTT?(00:28:07) Protokolle im Home Automation Umfeld: Zigbee, Homematic, Z-Wave, Thread(00:37:09) Herausforderungen bei der Home Automation: Anzahl der Protokolle im System(00:43:22) Herausforderungen bei der Home Automation: (Manuelle) Nutzung trotz Ausfall (nach Neustart oder Stromausfall)(00:47:30) Herausforderungen bei der Home Automation: Box of Shame - Zu viele Komponenten, die noch verbaut werden m&uuml;ssen(00:48:33) Herausforderungen bei der Home Automation: Ist das ganze ohne Internet / Cloud lauff&auml;hig?(00:50:48) Herausforderungen bei der Home Automation: Monitoring von Batteriekomponenten(00:53:31) Welche Automations haben wir implementiert?(01:01:27) Zuviele Home Automation Systeme und Komponente(01:02:00) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3812826, "starts": 13, "streams": 8, "listeners": 7, "sparkLine": [], "hasVideo": false}, {"name": "#22 NoSQL: ACID, BASE, Ende einer \u00c4ra Teil 2", "id": "7uPMZDpC2KQ5ZMbAtAN2S7", "url": "https://open.spotify.com/episode/7uPMZDpC2KQ5ZMbAtAN2S7", "releaseDate": "2022-06-07", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a553661abc5a6722a294e87a0", "description": "Neben relationalen Datenbanken gibt es noch eine ganz andere Welt: NoSQL.Doch wof&uuml;r steht eigentlich NoSQL? Kein SQL? Not Only SQL? Was ist eigentlich die Geschichte hinter dem Hype? Warum wurde diese Art von Datenbanken erfunden? Wof&uuml;r sind diese gut? Folgen NoSQL Datenbank auch dem ACID-Concept? Was ist Eventual Consistency? Und was sind Neo4J, M3, Cassandra, und Memcached f&uuml;r Datenbanken? Eine Episode voller Buzzwords &hellip; Hoffen wir auf ein Bingo.Bonus: Warum Wolfgang keinen Manta f&auml;hrt und ob Andy bald mit einem Ferrari zum einkaufen f&auml;hrt.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksACID: https://de.wikipedia.org/wiki/ACIDBASE: https://db-engines.com/de/article/BASECAP-Theorem: https://de.wikipedia.org/wiki/CAP-TheoremEventual Consistency: https://de.wikipedia.org/wiki/Konsistenz_(Datenspeicherung)#Verteilte_SystemeMichael Stonebraker / The End of an Architectural Era (It&rsquo;s Time for a Complete Rewrite): http://nms.csail.mit.edu/~stavros/pubs/hstore.pdfMongoDB: https://www.mongodb.com/Presto: https://prestodb.io/SAP HANA: https://www.sap.com/germany/products/hana.htmlRedis: https://redis.io/Neo4J: https://neo4j.com/M3: https://m3db.io/InfluxDB: https://www.influxdata.com/VictoriaMetrics: https://victoriametrics.com/Cassandra: https://cassandra.apache.org/Memcached: https://memcached.org/MySQL: https://www.mysql.com/de/MySQL Memcached Plugin: https://dev.mysql.com/doc/refman/5.6/en/innodb-memcached.htmlSprungmarken(00:00:00) Intro(00:00:53) Wolfgangs Auto, Entlastungspaket in Deutschland(00:03:23) Heutiges Thema: NoSQL Datenbanken und CO2-Einsparung durch Datenbank-Optimierungen(00:07:20) Was ist anders zur Episode 19 (Datenbanken) und ist NoSQL &uuml;berhaupt noch ein Thema?(00:08:39) Was verstehen wir unter dem Begriff NoSQL und woher kommt es eigentlich?(00:15:58) Tip: F&uuml;r Side Projects besser vertikal anstatt horizontal skalieren(00:16:50) NoSQL: Speziellere L&ouml;sungen mit Fokus auf Einfachheit und Benutzerfreundlichkeit(00:18:38) Braucht man heute noch Datenbank-Administratoren (DBA)?(00:21:13) Der Job des klassischen System-Administrator ist weiterhin relevant(00:23:15) Gibt es wirklich keine Datenbank-Schemas in der NoSQL-Welt?(00:27:23) Schema-Lose M&ouml;glichkeit in relationalen Datenbanken und Arbeit in die Datenbank oder Software auslagern(00:30:53) NoSQL hat die ACID-Properties aufgeweicht und warum ACID nachteilig f&uuml;r die Skalierung ist(00:33:28) Das NoSQL BASE Akronym(00:36:15) Der Client muss die Datenbank ordentlich nuzten um ACID-Garantien zu bekommen(00:41:35) Was bedeutet eigentlich NoSQL? Kein SQL? Not Only SQL?(00:43:38) Haupt-Speicher Datenbanken und was SAP damit zu tun hat(00:48:02) Was ist Neo4J f&uuml;r eine Datenbank und welcher Use-Case kann damit abgedeckt werden?(00:50:49) Was ist M3 f&uuml;r eine Datenbank und welcher Use-Case kann damit abgedeckt werden?(00:53:06) Was ist Cassandra f&uuml;r eine Datenbank und welcher Use-Case kann damit abgedeckt werden?(00:54:20) Was ist Memcached f&uuml;r eine Datenbank und welcher Use-Case kann damit abgedeckt werden?(00:58:44) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3636342, "starts": 5, "streams": 5, "listeners": 4, "sparkLine": [], "hasVideo": false}, {"name": "#21 Static Site Generators & DIE Webseite", "id": "7FpteXc95QPAnKihOuUUpX", "url": "https://open.spotify.com/episode/7FpteXc95QPAnKihOuUUpX", "releaseDate": "2022-05-31", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a463150d3c3c893ffcaed2e62", "description": "Statische Websites sind wieder cool und wir springen mit der eigenen Website direkt auf den Hype.Eine Episode mal in (teilweise) eigener Sache: Nach 6 Monaten und 20 Episoden haben wir eine eigene Website gebaut. Mit einem Static Site Generator. Wieso wir eine eigene Website haben wollen, was wir uns davon erhoffen, wie der technische Unterbau aussieht, wo wir recht dreckige Hacks eingebaut haben, was Static Site Generatoren sind und wozu sie eigentlich gut sind, bei welchen Use-Cases diese nicht geeignet sind und warum ein Produkt-Name zu Weltraum-Ergebnissen bei Google f&uuml;hren kann, kl&auml;ren wir in dieser Episode.Bonus: Was die Toten Hosen, Broilers und Rammstein mit Static Site Generators zu tun haben und wieso &Ouml;sterreich so gut im Marketing ist.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksPrototype.js: http://prototypejs.org/MooTools: https://mootools.net/script.aculo.us: https://script.aculo.us/RedCircle: https://redcircle.com/Template Podcast X: https://webflow.com/templates/html/podcast-x-podcast-website-templateshuffle: https://shuffle.dev/Hugo: https://gohugo.io/Gatsby: https://www.gatsbyjs.com/Nuxt.js: https://nuxtjs.org/Next.js: https://nextjs.org/Netlify: https://www.netlify.com/Cloudflare Edge Worker: https://workers.cloudflare.com/Jamstack: https://jamstack.org/Astro: https://astro.build/trivago Tech Blog: https://tech.trivago.com/tailwind: https://tailwindcss.com/Carrd: https://carrd.co/Sprungmarken(00:00:00) Intro(00:03:59) Die Engineering Kiosk Website: engineeringkiosk.dev(00:04:44) Historische JavaScript-Frameworks: MooTools, Prototype.js und script.aculo.us(00:06:40) Andys Agentur-Background(00:07:32) Warum braucht der Engineering Kiosk eine Website?(00:14:37) Warum haben wir jetzt erst eine Website?(00:16:06) Die Technik hinter der Engineering Kiosk Website(00:21:00) Was ist ein Static Site Generator?(00:31:29) Kritik am Static Site Generator Hugo(00:34:56) Welcher Static Site Generator wurde f&uuml;r die Engineering Kiosk Website verwendet?(00:39:09) Was ist das coole an Astro und wie wurde Website umgesetzt?(00:41:30) Wie bekommen wir die Podcast Episoden in die Website rein?(00:46:06) Technischer Unterbau mit Astro, tailwind, Python, Netlify(00:50:05) Feedback und Contribution zum Engineering Kiosk Website Setup(00:52:29) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3214719, "starts": 9, "streams": 8, "listeners": 5, "sparkLine": [], "hasVideo": false}, {"name": "#20 Off-Boarding und On-Boarding: Wie verlasse ich eine Firma richtig?", "id": "3H3C7ZKN2XsoJGBh8f5zRn", "url": "https://open.spotify.com/episode/3H3C7ZKN2XsoJGBh8f5zRn", "releaseDate": "2022-05-24", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8ade503b64e61ceb2ac214f5a0", "description": "Firmenwechsel. K&uuml;ndigung ist raus. Wie gehts weiter?Offboarding und Onboarding sind i.d.R. zwei Themen die sehr stark untersch&auml;tzt werden. Wie sieht man als Mitarbeiter zu, dass bei einem Firmenwechsel keine verbrannte Erde hinterlassen wird? Wie &uuml;bergibt man alles ordentlich? Warum ist das &uuml;berhaupt wichtig? Und was ist ein Exit-Gespr&auml;ch? Und wenn das alles durch ist: Wie startet man bei der neuen Firma ordentlich? Worauf sollte man achten? Und wie kann Onboarding aussehen? Dies und nich viel mehr.Bonus: Was Peter Thiel mit Kleber zu tun hat, was Krokodile mit Pr&uuml;fungsergebnissen zu tun hat und was ein Weckmann mit dem Podcast zu tun hat.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksList of tech migrations: https://github.com/kokizzu/list-of-tech-migrationsIan Goodfellow, Apple KI-Chef, verl&auml;sst Unternehmen: https://www.apfeltalk.de/magazin/news/ian-goodfellow-apple-ki-chef-verlaesst-unternehmen/GitLab onboarding: https://about.gitlab.com/handbook/people-group/general-onboarding/Sprungmarken(00:00:00) Intro(00:01:52) Landtagswahl in NRW und das Feedback bei der Briefwahl(00:07:42) Themen-Intro: Offboarding und Onboarding(00:08:42) Wie kommen wir auf das Thema Offboarding und Onboarding&nbsp;(00:10:09) Warum ist das Thema Offboarding und Onboarding relevant ist(00:12:02) Wie lang sollte man bei einer Firma bleiben?(00:16:02) Muss man sich jede 2 bis 4 Jahre neu erfinden?(00:19:43) Die Definition von Arbeit: Geld gegen Zeit und F&auml;higkeit und Loyalit&auml;t zu Firmen(00:21:12) Die Goldenen Handschellen durch Equity, Stocks und Firmen-Anteile(00:22:49) Warum ist der Offboarding-Prozess eigentlich wichtig?(00:23:43) Der Offboarding-Prozess aus der Sicht der Firma: Feedback, Exit-Chat, eigenes Netzwerk(00:32:30) Der Offboarding-Prozess aus Sicht eines Mitarbeiter: Verbrannte Erde, Kaffee trinken, Prozesse die failen(00:48:00) Die Zeit zwischen Offboarding und der neuen Firma: Urlaub(00:50:51) Onboarding in einer neuen Folge: Intro Chats, Dokumentation, Checklisten, Diagramme und dumme Fragen(01:11:20) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 4402695, "starts": 5, "streams": 5, "listeners": 2, "sparkLine": [], "hasVideo": false}, {"name": "#19 Datenbank-Deepdive (oder das Ende einer \u00c4ra): von Redis bis ClickHouse", "id": "2BoVJYXWCOoK9w31nZaevF", "url": "https://open.spotify.com/episode/2BoVJYXWCOoK9w31nZaevF", "releaseDate": "2022-05-17", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8ab64817f72939db1e55a071d4", "description": "Der zweite Datenbank-Deepdive im Engineering Kiosk.Indirekt kn&uuml;pfen wir an Episode 8 mit dem Thema Datenbanken. Diesmal fangen wir aber ganz vorne an: Mit hierarchischen Datenbanken &uuml;ber Objektorientierte Datenbanken, anschlie&szlig;end zu SQL bis hin zur NoSQL und Spaltenorientierten Datenbank-&Auml;ra. Dabei kl&auml;ren wir Fragen was zum Beispiel der Unterschied zwischen Datenbanken und Dateien ist, ob OOP-Datenbank immer noch ein Hype ist, was Indexe sind und wie diese funktionieren, warum die Migration weg von Oracle schwierig sein kann, ob Lucene eine Datenbank ist und noch viel viel mehr.Bonus: Was K&uuml;rbiskerne mit Datenbanken zu tun haben und warum MySQL ein besseres Adressbuch mit SQL Interface ist.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksIBM Mainframes: https://www.ibm.com/de-de/it-infrastructure/zClickHouse: https://github.com/ClickHouse/ClickHouse / https://clickhouse.com/Oracle Cloud Free Tier: https://www.oracle.com/de/cloud/free/Apache Lucene: https://lucene.apache.org/Apache Solr: https://solr.apache.org/ElasticSearch: https://github.com/elastic/elasticsearchListe der Datenbankmanagementsysteme: https://de.wikipedia.org/wiki/Liste_der_DatenbankmanagementsystemeIBM Go Fork f&uuml;r Mainframes: https://github.com/linux-on-ibm-z/goDB4O: https://de.wikipedia.org/wiki/Db4oMichael Stonebraker / The End of an Architectural Era (It&rsquo;s Time for a Complete Rewrite): http://nms.csail.mit.edu/~stavros/pubs/hstore.pdfPercona: https://www.percona.com/2ndquadrant: https://www.2ndquadrant.com/OSS Names: https://github.com/EngineeringKiosk/OSS-NamesRedis: https://github.com/redis/redisRedisLabs: https://redis.com/antirez: http://antirez.com/RocksDB: http://rocksdb.org/ElasticSearch: https://github.com/elastic/elasticsearchLevelDB: https://github.com/google/leveldbMyRocks: http://myrocks.io/Sprungmarken(00:00:00) Intro(00:00:55) Mathematik-Professoren und K&uuml;rbiskern-Br&ouml;tchen(00:02:27) Warum Datenbanken ein Herzensthema von Wolfgang ist(00:04:08) Was ist denn eine Datenbank und wann verwendet man eine Datenbank?(00:06:34) Sind klassische Dateien auch eine Datenbank?(00:07:25) Hierarchische Datenbanksysteme: IBM IMS(00:09:30) IBM Mainframes, Go, Docker und horizontale Skalierung(00:11:30) Was w&auml;re ein Use-Case von hierarchische und Objekt-Orientierte Datenbanken?(00:16:15) Hast du bereits eine Objekt-Orientierte Datenbanken bereits in einem Projekt eingesetzt?(00:16:52) Trennung von Daten und Applikationslogik und SQL als Basis-Datenbanken-Wissen(00:18:55) Was ist der Unterschied von SQL-Datenbanken und Dateien(00:19:32) Datenbank Index/Indize: Daten-Duplikation, Lese- und Schreibzugriffe(00:23:54) Ist eine Excel-Datei eine Datenbank?(00:24:58) Unterschied von Files und Datenbanken: Nutzung von mehreren Benutzern(00:28:03) Recovery, persistentes und konsistentes Speichern bei Files und Datenbanken(00:31:01) Relationale Datenbanken sind die eigentlich klassischen Datenbanken(00:34:31) Propriet&auml;re Datenbanken: Oracle Migration nach PostgreSQL(00:37:06) Oracle Cloud und das Free-Tier(00:38:29) MySQL wurde von Oracle &uuml;bernommen und MariaDB als Alternative(00:39:48) Logik in der Datenbank, Oracle-Migrationen und Application-Server(00:41:10) Gibt es ein Killer-Argument f&uuml;r propriet&auml;re Datenbanken?(00:43:57) Woher kommt der Name MySQL und MariaDB kommt?(00:45:19) Ist ElasticSearch eine Datenbank nach der klassischen Definition?(00:46:38) Ist Redis und andere Key-Value-Stores eine Datenbank?(00:48:42) NoSQL ist f&uuml;r Kinder, Feature-Ritis, Einfache Datenbanken und LevelDB / RocksDB und MyRocks(00:53:19) Was sind Spalten-Datenbanken und wann sollten diese angewendet werden? Analytische Datenbanken und Clickhouse von Yandex(00:58:15) Was f&uuml;r Fragen sind relevant um die richtige Datenbank f&uuml;r mich zu finden?(01:01:43) Feedback zum Thema Datenbanken und OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3842454, "starts": 5, "streams": 5, "listeners": 2, "sparkLine": [], "hasVideo": false}, {"name": "#18 Ziele und Performance-Metriken f\u00fcr Teams und mich selbst", "id": "2ByheYdW9jiNe2NZuLPkiI", "url": "https://open.spotify.com/episode/2ByheYdW9jiNe2NZuLPkiI", "releaseDate": "2022-05-10", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8aea5d2d6aee5c3a4299d2b68a", "description": "Ziel-Definitionen und Mitarbeiter-Metriken: Sinnvoll oder totaler Bl&ouml;dsinn?Das Thema ist hei&szlig; umstritten. Viele lieben Ziele im Job. Andere sind eher auf dem Trichter von &ldquo;Wer misst, misst Mist.&rdquo;. In dieser Episode sprechen Wolfgang und Andy &uuml;ber individuelle Ziele, Team-Ziele und &uuml;ber die Frage, ob sich das Team in die richtige Richtung bewegt. Unter anderem mit Fragen wie, ob es immer mathematisch messbare Ziele sein m&uuml;ssen, wie man mit subjektiven Zielen umgeht, ob man Lines of Code messen sollte, was die Velocity aus dem Scrum Framework mit OKRs zu tun haben und noch vieles mehr.Bonus: Wieso &Ouml;sterreicher Podcasts anschauen k&ouml;nnen und was das Fortuna D&uuml;sseldorf und das Sams mit der ganzen Sache zu tun hat.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksReddit-Disukssion: https://www.reddit.com/r/de_EDV/comments/uhnn4c/wie_werdet_ihr_als_mitarbeiter_und_euer_team/Sentry: https://sentry.io/OKR Beispiele f&uuml;r Software Teams: https://www.koan.co/okr-examples/engineeringOfficeVibe: https://officevibe.com/DevOps-Kultur: Organisationskultur von Westrum: https://cloud.google.com/architecture/devops/devops-culture-westrum-organizational-cultureCircleCi Engineering Kompetenz-Matrix: https://docs.google.com/spreadsheets/d/131XZCEb8LoXqy79WWrhCX4sBnGhCM1nAIz4feFZJsEo/edit#gid=0DORA Metriken: https://cloud.google.com/blog/products/devops-sre/using-the-four-keys-to-measure-your-devops-performanceSprungmarken(00:00:00) Intro(00:01:37) Helft uns mit eurem Netzwerk durch eine Podcast-Empfehlung(00:02:02) Wie kam das Thema dieser Podcast-Folge zustande? Team Metriken, Einzel-Metriken und Performance-Metriken von Mitarbeitern(00:06:06) Drei Kategorien: Individuelle Ziele, Team-Ziele und &quot;Bewegt sich das Team in die richtige Richtung?&quot;(00:06:36) Individuelle Ziele: Warum ist das Thema relevant? Warum sollte man sich &uuml;ber Ziele unterhalten?(00:13:50) Objective Key Results (OKR) als m&ouml;gliche Ziele(00:18:09) Die Kritik von Objective und Key Results als individuelle Ziele(00:21:19) Transparenz von Zielen im Team und in der Firma(00:23:44) Planung und Ziele ist unn&uuml;tz und Overhead(00:25:05) Antipatterns und Ziele die man vermeiden sollte(00:26:31) Was ist die Velocity innerhalb vom Kontext Scrum? Und wie sollte diese Metrik bewertet werden?(00:31:27) Die Nutzung von Code- und Software Repository Mining-Metriken als Basis zur Zielsetzung(00:37:12) Team-Metrik &quot;Happyness&quot; und wie man es messen kann(00:42:22) Das Westrum-Modell, OfficeVibe und Google Forms(00:45:43) 360* Feedback: Was ist es und die Kritik am System(00:52:26) Vergleichbarkeit von Software Engineers und Levels(00:57:45) Jobtitel und individuelle Ziele und h&ouml;here Erwartungen(00:59:00) &quot;Bewegt sich das Team in die richtige Richtung?&quot;, DORA-Metriken und Well-Rounded Software Engineer(01:03:30) Zieldefinitionen sind nicht einfach und Kontext ist King(01:07:46) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 4248711, "starts": 5, "streams": 4, "listeners": 1, "sparkLine": [], "hasVideo": false}, {"name": "#17 Was k\u00f6nnen wir beim Incident Management von der Feuerwehr lernen?", "id": "4FyZmHWjqNmlWn7bl7bPaP", "url": "https://open.spotify.com/episode/4FyZmHWjqNmlWn7bl7bPaP", "releaseDate": "2022-05-03", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a986a5e0b02523692c6e1d247", "description": "Was haben die Methoden der Feuerwehr zur Bek&auml;mpfung von Gro&szlig;schadensereignissen mit dem Incident Management von IT-Systemen gemeinsam?&nbsp;Diese Frage kl&auml;ren wir in der folgenden Episode. Wolfgang, als Mitglied der freiwilligen Feuerwehr, gibt einen Einblick in das Prozedere, wenn die Feuerwehr ausr&uuml;ckt. Andy vergleicht dies mit dem Incident Management von Cloud-Systemen. Wir kl&auml;ren wie man den Schaden eines Incidents misst, was dies mit dem Vertrauen von Kunden zu tun hat, wie ordentliche Pr&auml;vention aussehen kann und warum es daf&uuml;r wenig Ruhm gibt, was man unter War- und Peacetime versteht, wie ein moderner &ldquo;Schreiberling&rdquo; aussieht, wie dreist Presseleute sein k&ouml;nnen und was eine kleine Konferenz in Kalifornien damit zu tun hat.Bonus: Was Gartenschl&auml;uche und Stahl-Hoch&ouml;fen damit zu tun haben und wieso Kaffee holen doch eine Strategie sein kann.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksDatenverlust bei 1.500 Snapshots von Hetzner Cloud: https://www.golem.de/news/trotz-redundanz-datenverlust-bei-1-500-snapshots-von-hetzner-cloud-2204-164628.htmlCeph Storage: https://ceph.io/Inside the Longest Atlassian Outage of All Time: https://newsletter.pragmaticengineer.com/p/scoop-atlassianAtlassian stoppt den Verkauf von On-Premise Lizenzen: https://www.atlassian.com/migration/assess/journey-to-cloudauditd: https://linux.die.net/man/8/auditdrsyslog: https://www.rsyslog.com/Incident.io: https://incident.io/5-Why-Methode: https://de.wikipedia.org/wiki/5-Why-MethodePostmortem &ldquo;Roblox Return to Service 10/28-10/31 2021&rdquo;: https://blog.roblox.com/2022/01/roblox-return-to-service-10-28-10-31-2021/Postmortem &ldquo;The Discovery of Apache ZooKeeper&rsquo;s Poison Packet&rdquo;: https://www.pagerduty.com/blog/the-discovery-of-apache-zookeepers-poison-packet/Postmortem &ldquo;etcd: v3.5 data inconsistency&rdquo;: https://github.com/etcd-io/etcd/blob/main/Documentation/postmortems/v3.5-data-inconsistency.mdPostmortem: &ldquo;Gocardless: Incident review: API and Dashboard outage on 10 October 2017&rdquo;: https://gocardless.com/blog/incident-review-api-and-dashboard-outage-on-10th-october/Postmortem: &ldquo;Monzo,Outage, 29. July 2019&rdquo;: https://monzo.com/blog/2019/09/08/why-monzo-wasnt-working-on-july-29thSammlung von verschiedenen Postmortems: https://github.com/danluu/post-mortemsOpsGenie: https://www.atlassian.com/de/software/opsgeniePagerDuty: https://www.pagerduty.com/Buch &ldquo;Incident Management for Operations&rdquo;: https://www.amazon.de/Incident-Management-Operations-Rob-Schnepp/dp/1491917628Sprungmarken(00:00:00) Intro(00:01:21) Wie viel Feuerwehr-Leute gibt es in Deutschland?(00:02:58) Was ist Incident Management im DevOps/Infrastruktur-Bereich(00:07:33) Firmen-Interne Incidents k&ouml;nnen ebenfalls richtig teuer werden(00:09:14) Wie wichtig ist Pr&auml;vention und Monitoring?(00:10:26) Wie agiert ein Unternehmen bei einem IT-Incident? Chaotische Hilfe(00:12:33) Inwieweit kann ein IT-Incident mit einem Gro&szlig;schadensereignis verglichen werden?(00:14:14) Was ist ein Gro&szlig;schadensereignis?(00:15:57) Wie bekommen denn alle mit, dass ein Incident gerade eintritt? Und welche Strukturen sind notwendig?(00:17:43) Wer &uuml;bernimmt die Rolle des (Incident) Commanders?(00:19:21) Was beinhaltet denn die &Uuml;bernahme eines Incidents?(00:21:23) Vergleich von der &Uuml;bernahme eines Incidents zwischen der Feuerwehr und einem IT-System(00:23:43) Strategie der Feuerwehr bei Incidents und Hierarchien(00:26:14) Ist der Einsatzleiter ein aktiver Teil des Incidents? Und welche Rollen gibt es noch?(00:30:09) Kommunikationsstrukturen in IT-Incidents(00:33:01) Der aktuelle Atlassian-Incident(00:34:44) Die Rollen von Logistik und Administration in der Feuerwehr und in der IT(00:37:16) (Essens)-Logistik bei Remote-Incidents(00:40:19) War-Rooms: Anti-Pattern oder Must-Have + Pro-Aktive Kommunikation(00:43:26) War- und Peace-Time(00:44:19) Incident Commander, Rollen und Rollen-Rotation im IT-Bereich(00:45:53) Die Rolle des Protokollf&uuml;hrers / Schreiberlings(00:50:46) Post Mortems und Nachbesprechungen: Warum machen die Sinn?(00:54:21) Vorbereitungen, Pr&auml;vention und Training in der Friedenszeit(00:57:51) Lernen aus Incidents und die Post Mortem-Struktur(01:00:09) Employer Branding mit Post Mortems(01:01:45) Happy-Path in Post Mortems(01:02:35) Nachbesprechung bei der Feuerwehr und Post Mortem Conferences(01:06:45) Web-Ops / Fire-Ops-Conference(01:09:40) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 4174420, "starts": 0, "streams": 0, "listeners": 0, "sparkLine": [], "hasVideo": false}, {"name": "#16 Code Reviews: N\u00fctzlich oder bremsen nur ein gutes Team?", "id": "12JJPgrlzpQmrLWEiqT1mR", "url": "https://open.spotify.com/episode/12JJPgrlzpQmrLWEiqT1mR", "releaseDate": "2022-04-26", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8ac34716e15a577b856c627c10", "description": "Code Reviews: Jeder will schnelles Feedback, doch niemand hat Zeit daf&uuml;r - Eine Hassliebe.Eine Komponente im Alltag jedes Software Engineers. Egal ob Junior, Senior oder Staff-Engineer. Jeder erstellt Code Reviews und kommentiert die Arbeit von den Kollegen. Doch wie sehen gute Code Reviews aus? Was geh&ouml;rt hinein, was bleibt besser drau&szlig;en? Wie viel Reviewer machen Sinn? Wie geht man mit Nitpicking-Kommentaren und Gatekeepern um? Und allgemein: Zieht dieser zus&auml;tzliche Schritt nicht die Performance des Teams runter und ist sowieso Overhead?All das und noch viel mehr in dieser Episode zum Thema Code Reviews.Bonus: Was Faultiere und Markus S&ouml;der mit Code Reviews zu tun haben und warum Blubberwasser den Charakter verdirbt.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksGoogle Fellows: https://www.newyorker.com/magazine/2018/12/10/the-friendship-that-made-google-hugeCode Owners File: https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-ownersSoftware Repository Mining: https://en.wikipedia.org/wiki/Mining_software_repositoriesRound Robin Code Review Assignment: https://docs.github.com/en/organizations/organizing-members-into-teams/managing-code-review-settings-for-your-teamInner Source: https://de.wikipedia.org/wiki/Inner_SourceSuggesting Changes on GitHub: http://haacked.com/archive/2019/06/03/suggested-changes/Are Pull Requests Holding Back Your Team?: https://betterprogramming.pub/are-pull-requests-holding-back-your-team-e8aec48986c2Extrem Programming: https://de.wikipedia.org/wiki/Extreme_ProgrammingSprungmarken(00:00) Intro(01:23) Amsterdam, Hipster und Craft-Bier(02:04) git rebase, history rewrite, force push und Kollaboration(04:54) Saubere git history und Merge-Commits(05:17) Code Reviews(02:05) Was ist denn ein Code Review?(07:02) Muss der Code Reviewer immer mehr Erfahrung haben?(08:10) Was wir von Juniors im Job und bei Code Reviews lernen k&ouml;nnen(09:37) Was ist denn ein Google Fellow?(10:37) Code Reviews als Mittel f&uuml;rs Onboarding(11:35) Fr&uuml;hes pushen der Arbeit ist wichtig f&uuml;r fr&uuml;hes Feedback(13:15) Wo sollen die Informationen zu meiner &Auml;nderung stehen? Im Pull Request oder in der Git Commit message?(15:04) Wen lade ich zu meinem Code Review ein? Code Owners file und Software Repository Mining(17:34) Worauf soll ich als Code Reviewer acht geben und konzentrieren?(20:09) Pro-Aktivit&auml;t in Code Reviews mit aktiven Vorschl&auml;gen und Fragen stellen(23:33) Muss man jedes Feedback aus dem Code Review annehmen? Lass das Ego vor der T&uuml;r und Gate-Keeper(26:37) Kommunikationskonflikte in Code Reviews: Video Calls vs. geschriebene Kommunikation(28:14) Nitpicking, Code-Formatting, Styleguides, Linter und Automatisierung(32:11) Mindern Pull Requests und Code Reviews die Performance von Teams?(36:56) Schnelligkeit bei Facebook und Booking: Schnelles Mergen und Code Reviews danach(39:01) Auslagerung der Verantwortung bei Code Reviews und Blameless Kultur innerhalb der Firma(42:38) Technische Mittel f&uuml;r sichere Deploys: Feature Flags, Canary Deployments, Dark Launches und Blue-Green-Deployments(46:08) Wie schnell sollte ein Code Review vom Team gereviewed werden?(53:00) Code Reviews in der Firma vs. Code Reviews in Open Source und die Motivation(54:34) Konsequenzen bei nicht eingehaltenen Service Level Agreements (SLA)(57:28) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3543819, "starts": 6, "streams": 4, "listeners": 2, "sparkLine": [], "hasVideo": false}, {"name": "#15  Source Code Kommentare, Git Commits Messages, Merge Commits und Branch-Visualisierungs-Kunst", "id": "28UhEK728kyETTyqcNb6hP", "url": "https://open.spotify.com/episode/28UhEK728kyETTyqcNb6hP", "releaseDate": "2022-04-19", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8af6ce7e37cb39e018532f9312", "description": "Kommentare im Quellcode und Git Commit Messages - Liest die &uuml;berhaupt wer?Ein Streit, der so alt ist wie die Software Entwicklung selbst: Code ist Selbsterkl&auml;rend und braucht keine Kommentare. Oder doch? Und die Git Historie ist auch eigentlich sinnlos. Warum sollte da jemand zur&uuml;ck gehen und sich die Commit Messages durchlesen?Diese Fragen und Themen wie Semantic Versioning, Idiomatische Programmier-Patterns, Merge Commits, Story-Tellung und was Fynn Kliemanns Kunst mit der Git Branch-Visualisierung zu tun hat, kl&auml;ren Wolfgang und Andy in dieser Episode vom Engineering Kiosk.Bonus: Warum Andy einen neuen Podcast-Partner sucht und Wolfgang lieber seinen Code angreift, anstatt Ihn zu entwickeln.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksBest practices for writing code comments: https://stackoverflow.blog/2021/12/23/best-practices-for-writing-code-comments/&nbsp;SymfonyLive Cologne 2016 - Jan van Thoor - Open Heart Surgery In Production: https://www.youtube.com/watch?v=vBG5pUn1OlgWhat is the best comment in source code you have ever encountered?: https://stackoverflow.com/questions/184618/what-is-the-best-comment-in-source-code-you-have-ever-encounteredMelanie Patrick: Git - How to unfuck https://www.youtube.com/watch?v=LP4F2rmi4r4Automatische Changelog/Release PRs: https://github.com/googleapis/release-pleaseSemantic Versioning: https://semver.org/Software Repository Mining: https://en.wikipedia.org/wiki/Mining_software_repositoriesAndy Grunwald - The story of my bachelor thesis about Software Repository Mining: https://andygrunwald.com/blog/the-story-of-my-bachelor-thesis-about-software-repository-mining/Linux Kernel Git Commit Messages Beispiel: https://github.com/torvalds/linux/commit/3ae87d2f25c0e998da2721ce332e2b80d3d53c39Sprungmarken(00:00:00) Intro(00:01:21) Home Office: Job und Privat stark trennen?(00:02:31) Warum macht man Sport und wie steht Wolfgang zur bayerischen Ess- und Feierkultur(00:03:43) Karriere oder Software-Engineering Podcast und Hardcore-Tech-Thema(00:04:38) Wie viel Kommentare hat die letzte Datei, die du in der IDE offen hattest?(00:01:16) Wie stehst du allgemein zu Kommentaren?(00:01:05) Was sind sinnvolle Kommentare und ist Code wirklich selbsterkl&auml;rend?(00:13:55) Komplexen code refactoren oder lieber gut kommentieren?(00:17:40) Kommentare f&uuml;r kopierten Stack Overflow Code(00:19:48) Kommentare f&uuml;r die Business-Dom&auml;ne(00:20:11) Algorithmen und Variablen mit einem Buchstaben(00:21:46) K&ouml;nnen gute Variablen und Funktionsnamen Kommentare ersetzen?(00:23:43) Wird der Code f&uuml;rs Lesen oder Schreiben optimiert?(00:25:43) Bit-Shifting versteht doch keiner(00:28:29) Wie komplex eigentlich die Bash-Programmierung sein(00:33:11) TODO-Kommentare im Code oder lieber ein Ticket?(00:36:56) Story-Telling im Code und Entwickler-Humor(00:40:02) Kommentare in Deutsch oder Englisch und Dom&auml;nen-Vokabular(00:42:34) Wie sollten Git Commit Messages aussehen? Und warum Git Commit Messages E-Mail sein k&ouml;nnen(00:45:39) Isolierte Git Commits f&uuml;r bessere Git Commit Messages(00:46:44) Merge Commits(00:49:59) Strukturierte Git Commit Messages und Nutzung von Prefixes wie bugfix und feature in Git Commit Messages(00:52:13) Was ist Semantic Versioning (SemVer)?(00:56:38) Der Linux Kernel als Vorbild f&uuml;r gute Commit Messages(00:57:55) Wolfgangs Meinung zu Merge-Commits(00:59:38) Branch-Visualisierung in Git(01:01:30) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3904713, "starts": 3, "streams": 3, "listeners": 2, "sparkLine": [], "hasVideo": false}, {"name": "#14 async und await: asynchrones Arbeiten im Alltag", "id": "2efebNjDPhMZBjGC78z9fg", "url": "https://open.spotify.com/episode/2efebNjDPhMZBjGC78z9fg", "releaseDate": "2022-04-12", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a916dfd6fbe6e7c65f3ea20b9", "description": "Remote-Work, asynchrone und parallele Arbeit und die eigene Work-Life-Balance.Durch Corona haben wir alle einen Geschmack von der Remote-Arbeit und Home Office bekommen. Einige hassen es, andere lieben es und haben sogar dem B&uuml;ro f&uuml;r immer den R&uuml;cken gekehrt. Aber worauf kommt es denn wirklich an?Wolfgang und Andy gehen dieser Frage mal auf den Grund: async und await, Event-Loop, Fokus-Zeiten, Eule und Lerche als Menschentypen, Vertrauen im Team, messbare Ergebnisse, Pro-Aktivit&auml;t und Schreib-Skills. Was das alles miteinander zu tun hat, h&ouml;rt ihr in dieser Episode.Bonus: Warum man in Amsterdam anders meditiert als anderswo, wieso Andys Liebe zu Redis einen Knick bekommen hat und ob Wolfgang wirklich Holl&auml;nder ist.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksPieter Levels https://levels.io/async/&nbsp;http://nightowlsbook.com/&nbsp;Slack: https://slack.com/Design Documents at Google: https://www.industrialempathy.com/posts/design-docs-at-google/Mantis BugTracking: https://www.mantisbt.org/Redmine: https://www.redmine.org/Sprungmarken(00:00) Intro und R&uuml;ckmeldung zur Episode #13 &uuml;ber Produktivit&auml;t(01:22) Async + Asynchronit&auml;t (async, await, event loop)(02:00) Vorteil von asynchroner Verarbeitung(04:13) Asynchronit&auml;t vs. Parallelisierung(07:08) NodeJS, Callback-H&ouml;lle und async/await in Ruby(08:27) Warum verwenden wir nicht die asynchrone Herangehensweise um unsere eigene Zeit besser auszunutzen? - Asynchrones Arbeiten(11:23) Asynchrones Arbeiten, Schlafrhythmus (Eule vs. Lerche) und lange Fokus-Zeiten(14:48) Was verstehen wir unser asynchroner Arbeit?(18:34) Wie kommt man denn zu dem asynchronen Arbeiten (zB als kleine Firma)? (Vertrauen, Pro-Aktivit&auml;t, &Uuml;ber-Kommunikation)(21:29) &hellip; was noch? (Kollaboratives Tooling, Energie f&uuml;r Vorschl&auml;ge und Objektivit&auml;t, Diagramme, Transparenz)(29:12) Die Funktion und Wahrnehmung von Slack in der asynchronen Arbeitswelt(34:05) Die Schriftform als Skill und warum dies trainiert werden sollte(35:22) Anwendungen von deinen Schreib-Skills im Ticket-System(38:50) Technical Writing, Dokumentation und Meeting Protokolle(39:26) Design Dokumente als Basis f&uuml;r die asynchrone Arbeit(53:32) Tiefere Gedanken w&auml;hrend des schreibens(54:05) Wrap Up zum Thema asynchrones Arbeiten und OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3389046, "starts": 5, "streams": 5, "listeners": 4, "sparkLine": [], "hasVideo": false}, {"name": "#13 Produktivit\u00e4t", "id": "6idJ9F1bk6AQKFxrbukvC3", "url": "https://open.spotify.com/episode/6idJ9F1bk6AQKFxrbukvC3", "releaseDate": "2022-04-05", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8aa2bdf356e74e9fa989e90ab3", "description": "Zeit- und Produktivit&auml;tsmanagement: Buzzword-Bingo oder bringt das wirklich was?So bl&ouml;d wie das Thema auch klingen mag, es hat Vorteile. Nicht nur im beruflichen Umfeld, sondern auch im privaten. Wolfgang und Andy sprechen &uuml;ber Ihre Art und Weise, Aufgaben zu organisieren, welche Methoden Sie verwenden, welche was bringen und welche Bl&ouml;dsinn sind, wo die Probleme liegen, ob man Talent daf&uuml;r bracht, wie man sich selbst mit spannenden Aufgaben austricksen kann und wie man damit seinen Vorgesetzten Erziehen kann.Bonus: Warum Wolfgang endlich seine Zahnb&uuml;rste wechselt, was Volkswagen mit Getting Things Done zu tun hat und wieso Andy ab und zu knatsch mit seiner Frau hat.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksEpisode 10 zu 1on1s: https://engineeringkiosk.dev/episodes/10Remember The Milk: https://www.rememberthemilk.com/Asana: https://asana.com/Things: https://culturedcode.com/things/Evernote: https://evernote.com/Notable: https://notable.app/emacs org mode Getting Things Done: https://orgmode.org/worg/org-gtd-etc.htmlWunderlist: https://de.wikipedia.org/wiki/WunderlistMicrosoft TODO App: https://todo.microsoft.com/tasks/de-deWolfgang Gassler - How I Trick My Well Developed Procrastination Skills: https://wolfgang.gassler.org/trick-my-procrastination-skills/Paul Graham - Makers Schedule, Managers Schedule: http://www.paulgraham.com/makersschedule.htmlGetting Things Done (YouTube-Video): https://www.youtube.com/watch?v=gCswMsONkwYEisenhower Prinzip: https://de.wikipedia.org/wiki/Eisenhower-PrinzipInbox Zero: https://blog.hubspot.de/sales/inbox-zeroStudiVZ l&ouml;scht alle Bugs https://www.thewebhatesme.com/allgemein/bugfree-the-vz-way/&nbsp;&nbsp;StudiVZ wird abgeschaltet: https://taz.de/StudiVZ-wird-abgeschaltet/!5841671/B&uuml;cherGetting Things Done: The Art of Stress-Free Productivity von David AllenAtomic Habits: An Easy &amp; Proven Way to Build Good Habits &amp; Break Bad Ones von James ClearChecklist Manifesto: How to Get Things Right von Atul GawandeSprungmarken(00:00) Warum Zeit- und Produktivit&auml;tsmanagement relevant ist(04:44) Zeit-Management als Thema in 1on1s(06:08) Getting Things Done (GTD) von David Allen(12:31) Kritik zu Getting Things Done (GTD)(17:02) Muss man jede Regel von Gettings Things Done (GTD) befolgen um es erfolgreich einzusetzen?(18:38) Nutzung von Getting Things Done (GTD) im privaten und im beruflichen(21:03) Erinnerungen als Engineering Manager um soziale Kontakte zu pflegen(23:03) Wie man seine Ehefrau mit Getting Things Done auf die Palme bringen kann(25:00) Inbox Zero(30:35) Kalender(35:24) Eisenhower-Matrix(38:46) Herausforderung: Aufgaben aktiv nicht zu tun(42:21) Sich selbst mit spannenden Tasks selbst austricksen aka &quot;Shape and Sell&quot;(45:21) Das schwierige, mit einer neuen Methode zu starten(47:33) Welche Tools gibt es? Oder ist Stift und Zettel das Mittel der Wahl?(52:59) Inspiration durch Blog-Artikel und B&uuml;cher(55:37) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3529755, "starts": 12, "streams": 9, "listeners": 6, "sparkLine": [], "hasVideo": false}, {"name": "#12 Make oder Buy", "id": "7xXnR8rP8gB25P9dQkvVQk", "url": "https://open.spotify.com/episode/7xXnR8rP8gB25P9dQkvVQk", "releaseDate": "2022-03-29", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a5ff38f63bd96333c598d71d7", "description": "Make oder Buy: Alles einkaufen oder doch lieber selber machen?Eine Frage die jeder von uns kennt: Sind meine Anforderungen so speziell, dass es kein Produkt auf dem Markt gibt, die diese abdeckt? Kann ich das nicht ggf. sogar besser, wenn ich das selbst mache?In dieser Episode versuchen wir das Thema mal etwas zu durchleuchten: Wann sollte man Services einkaufen? Wann doch lieber selbst umsetzen? Wie geht man mit interner Politik und Gegenwehr um? Was kostet das Selbermachen eigentlich und was bedeuten Begriffe wie Total Cost of Ownership, Opportunit&auml;tskosten und Shadow-IT eigentlich? Ist Open Source ein Zwischenweg und wie sieht die ganze Security-M&auml;&szlig;ig aus?Bonus: Ob wir ein Karrierepodcast sind, was man in 1. Semester BWL lernt, welche Sicherheitsanforderungen eine Webagentur aus Wanne-Eickel hat und warum Wolfgang Google mehr vertraut als sich selber.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksHackerNews Comment als Dropbox gelauncht wurde: https://news.ycombinator.com/item?id=9224Okta says hundreds of companies impacted by security breach: https://techcrunch.com/2022/03/23/okta-breach-sykes-sitel/Looker: https://www.looker.com/Nextcloud: https://nextcloud.com/Nextcloud-Angebot bei Hetzner: https://www.hetzner.com/de/storage/storage-shareRender: https://render.com/Vercel: https://vercel.com/Netlify: https://www.netlify.com/F-Online, die F&uuml;hrerschein-Plattform: https://www.f-online.at/Sprungmarken(00:00) Intro(01:33) Sollen wir die Software f&uuml;r unser A/B-Testing kaufen oder selber bauen?(05:23) Reisekosten-Abrechnungen: Wie kann es gehen?(06:53) Make or buy(08:27) Wolfgangs Stand bei Make or buy im privaten Leben(14:45) Wolfgangs Entscheidungskriterien f&uuml;r make or buy(15:42) Was ist die eigene Zeit wirklich Wert?(17:57) Klassische Beispiele f&uuml;r den &ldquo;make or buy&rdquo;-Fall in Firmen(23:42) Was kostet ein Software-Engineer, etwas selbst zu machen (Total Cost of Ownership)(28:55) Abgrenzung von make or buy(30:14) Opportunit&auml;tskosten: Produktivit&auml;t und User Experience(33:40) Welche Bereiche gibt es, wo es Sinn macht, die Produkte nicht einzukaufen?(37:07) Risiken beim Einkaufen von Produkten: Shadow-IT und Workflows(41:16) Gegenwehr, fadenscheinige Gr&uuml;nde und interne Politik bei make or buy(48:02) Sicherheitsbedenken bei der Benutzung von externen Services(50:48) Eigene Erfahrung: Mehr make oder mehr buy?(56:07) Wann sollte man Software kaufen?(56:39) Wann sollte man die Software selbst bauen?(57:44) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3583505, "starts": 8, "streams": 7, "listeners": 3, "sparkLine": [], "hasVideo": false}, {"name": "#11 Die Suche nach dem IT Traumjob", "id": "10M5UFnQfcQXwYTIFjQrqP", "url": "https://open.spotify.com/episode/10M5UFnQfcQXwYTIFjQrqP", "releaseDate": "2022-03-22", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a655b8e56d03b921f815a0b54", "description": "Den richtigen Arbeitgeber und die richtige Firma finden: Eine Mammut-Aufgabe.In dieser Episode sprechen Wolfgang und Andy ein wenig dar&uuml;ber wie man neue, potentielle, Arbeitgeber findet, welche Fragen man sich selbst stellen kann um herauszufinden, was einem wichtig ist, geben Tipps um mit Recruitern zusammen zu arbeiten, Fragen uns ob ein hohes Gehalt wirklich alles ist, ob Startups, ScaleUps oder Konzerne besser sind und warum Agrar-Tech und M&auml;hdrescher der hei&szlig;e Schei&szlig; sind.Als Start in dieses Thema gibt es ein Re-Cap von einer User-Umfrage auf Reddit zum Thema 1on1s und die Beantwortung der Frage, wie man gutes (People) Leadership in neuen Firmen erkennt.Bonus: Was Andys Kegeltour mit seiner Jobsuche zu tun hat und was ein Mottek ist.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksReddit-Umfrage &quot;Wer von euch hat in seinem IT Job regelm&auml;&szlig;ig 1on1s (mit Vorgesetzten)?&quot; https://www.reddit.com/r/de_EDV/comments/tg5y0y/wer_von_euch_hat_in_seinem_it_job_regelm%C3%A4%C3%9Fig/Zend https://www.zend.com/Claas https://www.claas.de/John Deere Just Swindled Farmers out of Their Right to Repair https://www.wired.com/story/john-deere-farmers-right-to-repair/Mika Timing https://www.mikatiming.de/TechCrunch https://techcrunch.com/CrunchBase https://www.crunchbase.com/Kafka https://kafka.apache.org/Deloitte Digital: https://www2.deloitte.com/de/de/pages/technology/topics/deloitte-digital.htmlConfluent: https://www.confluent.io/Y Combinator https://www.ycombinator.com/Sprungmarken(00:00) Intro(01:02) Reddit-Umfrage zum Thema 1 on 1 / Episode 10(03:02) &quot;Man braucht keine 1 on 1s, wir k&ouml;nnen immer dr&uuml;ber sprechen&quot;(08:58) Wie wichtig sind 1 on 1s f&uuml;r dich bei deinem neuen Arbeitgeber?(12:16) Wie findest du heraus, ob der Lead Erfahrung hat?(15:05) Ist ein 1on1 ein Weiterentwicklungs-Benefit einer Firma oder Standard, den man annehmen sollte?(16:49) Welche Weiterentwicklungsm&ouml;glichkeiten sind wichtig f&uuml;r die Wahl einer neuen Firma? Was ist einfach zu etablieren?(18:41) Wie findet man eine neue Firma, bei der man sich bewerben k&ouml;nnte?(21:39) Interviews sind auch gl&uuml;ckssache(24:13) Den Interviewprozess nutzen um zu erfahren, wie andere die Probleme l&ouml;sen(25:50) Firmen finden durch Liebe zum Produkt(31:56) Firmen finden ohne Liebe zum Produkt(37:12) Ist ein Startup etwas f&uuml;r mich?(39:30) Sucht nicht selbst, sondern lasst euch finden (zB &uuml;ber LinkedIn)(41:25) Tipps um mit Recruitern zu arbeiten(45:22) Macht euch Gedanken, was Ihr vom neuen Arbeitgeber erwartet(47:51) Gehalt, Geld und wie viel wollt und braucht Ihr?(51:19) Andys Haupt-Kriterien f&uuml;r eine neue Firma(53:50) Wie viele Interviews waren notwendig, um die richtige Firma zu finden?(55:40) Interviews und Coding Challenges als Side Projetc(56:12) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3531108, "starts": 10, "streams": 8, "listeners": 7, "sparkLine": [], "hasVideo": false}, {"name": "#10 Das Karriere Booster Meeting 1:1s", "id": "3KXQnrxoKkdTDFVXxiR3IA", "url": "https://open.spotify.com/episode/3KXQnrxoKkdTDFVXxiR3IA", "releaseDate": "2022-03-15", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a7ddd4a4beb687de22c3ecccb", "description": "1on1s - Zeitverschwendung oder eins der wertvollsten Meetings deiner Karriere?Andy und Wolfgang sprechen &uuml;ber das meist untersch&auml;tzte Meeting deiner beruflichen Laufbahn: 1-on-1s: Purer M&uuml;ll, Zeitverschwendung und reines Manager-Getue? Oder die beste zeitliche Investition? Wir kl&auml;ren, was 1:1s sind, geben Tipps zum Aufbau einer vertrauensvolle Atmosph&auml;re, geben dir konkrete Fragen an die Hand, die du als Individual Contributor oder Engineering Manager stellen kannst und kl&auml;ren, was du tun kannst, wenn du bisher noch keine regul&auml;ren Meetings mit deiner Vorgesetzten hast.Bonus: Warum Wolfgang alle 1on1s mit Andy abgebrochen hat.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinks101 Fragen f&uuml;r ein 1on1: https://jasonevanish.com/2014/05/29/101-questions-to-ask-in-1-on-1s/5 Fragen, die ein Manager jedem seiner Direct Reports stellen sollte: https://hbr.org/2022/01/5-questions-every-manager-needs-to-ask-their-direct-reports1on1 for Beginners: https://www.tombartel.me/blog/one-on-ones-for-beginners/1on1: Beyond Status Updates https://www.tombartel.me/blog/one-on-ones-beyond-status-update/Taking notes during 1on1s: https://www.tombartel.me/blog/taking-notes-during-1-on-1s/How to prepare a 1on1 in 5 minutes: https://www.tombartel.me/blog/how-to-prepare-one-on-one-five-minutes/Ein Intro zu 1on1s bei Spotify https://engineering.atspotify.com/2015/12/a-101-on-11s/&nbsp;ToolingLighthouse: https://getlighthouse.com/OfficeVibe: https://officevibe.com/one-on-one-softwareSprungmarken(00:00) Intro(00:30) Warum eine Episode &uuml;ber 1on1s(02:40) Begriffsdefinition &quot;1on1&quot; und ist das ein Jour fixe?(05:24) Mythos Zeitverschwendung und unn&uuml;tzes Gespr&auml;ch(06:23) Sichere und vertrauensvolle Atmosph&auml;re im 1on1(08:28) Tipps um eine sichere Atmosph&auml;re und Vertrauen zu schaffen(12:22) Wer sollte ein 1on1 machen? Und was sind Skip-Level Meetings?(15:53) Sinnvolle 1on1 Intervalle(19:35) Was sollte man in 1on1s besprechen? Welche Fragen kann ich als Individual Contributer stellen?(28:52) Wie sollte ein Engineering Manager sein 1on1 vorbereiten und angehen?(39:12) Tooling, die 1on1s supporten(41:15) Perspektivenwechsel: Fragt eure Managerin(42:57) Wie man am besten mit 1on1s beginnt(44:12) Feedback und OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 2756060, "starts": 4, "streams": 4, "listeners": 2, "sparkLine": [], "hasVideo": false}, {"name": "#09 Ukraine", "id": "30CdS9BlvI3GXsCgswRgm8", "url": "https://open.spotify.com/episode/30CdS9BlvI3GXsCgswRgm8", "releaseDate": "2022-03-08", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a441fdf27990abf1b9c4ea192", "description": "Es wird politisch: Der Angriffskrieg auf die Ukraine und eine m&ouml;glichst technische Beleuchtung des Themas.Wolfgang und Andy sprechen &uuml;ber die Ukraine und den Angriff durch Russland: Wie haben Tech Konzerne und Firmen reagiert, wie helfen sie ihren Mitarbeiterinnen und Familien. Welche Rolle spielen die GAFA Konzerne und welche Rolle k&ouml;nnten sie spielen. Wie k&ouml;nnen wir alle helfen und welche Rolle spielen (Miss)informationen?Bonus: Als kleine Aufmunterung starten wir ein Projekt, das lustige Geschichten hinter Open-Source Projekten sammelt.&nbsp;Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinks&Ouml;sterreich schaltet seine Corona-Warn-App ab&ldquo;Milit&auml;risch ist &Ouml;sterreich ein neutraler Staat, aber wir sind politisch niemals neutral, wenn es um die Achtung des V&ouml;lkerrechts geht&rdquo;Hilferuf von Ruby Entwickler (Blog Post), Tweet: I am not asking you to stop living your comfortable lives [...] I am just asking you to spread the word and show support.Wenn Russen ihren Kindern in der Ukraine oder Ausland nicht glaubenDoppelg&auml;nger Podcast: Hintergrund zu M&ouml;glichkeiten von Big Tech (empfehlenswerter rant von Host Pip, ersten 30 min), Erfahrungsbericht Aufnahme von Fl&uuml;chtlingeCrowdstorming mit Tinder und Google mapsGoogle wird politisch, auf der Startseite: jedoch nur in ihrem Interesse bzgl. Leistungsschutzrecht&nbsp;ICANN Antwort auf Ukrainische Anfrage SSL Zertifikate zu invalidierenThe Pragmatic engineer: The Ukraine War - and Its Impact on the Tech IndustryUnterk&uuml;nfte melden auf https://www.unterkunft-ukraine.de/ oder&nbsp;https://www.airbnb.org/Mehr Informationen und alle Links, um zu Helfen, unter https://www.zeit.de/zeit-magazin/2022-02/hilfe-ukraine-spenden-deutschland-tipps und f&uuml;r &Ouml;sterreich unter https://www.moment.at/story/ukraine-in-oesterreich-helfen&nbsp;Gute Auflistung von verl&auml;sslichen Informationen und gegen Fake NewsProgrammier.bar: Tech News, auch &uuml;ber Russland SanktionenDer Hintergrund von Open Source NamensgebungenMastercard und Visa schlie&szlig;en russische Banken ausNetflix und TikTok ziehen den Stecker in Russlandairbnb.org - Unterk&uuml;nfte in Krisenzeitenunterkunft-ukraine.deSprungmarken(00:00) Intro(00:52) Abgeschlossene Corona-Pandemie in &Ouml;sterreich(02:05) Ukraine-Geschehnisse aus der technischen Perspektive(02:26) Wolfgangs-Sabbatical in der Ukraine(04:49) Verbindung der Geschehnisse der Ukraine mit Technologie(05:48) Wie Firmen die Bev&ouml;lkerung in den entsprechenden Gebieten unterst&uuml;tzen(07:50) M&auml;nner d&uuml;rfen zur Zeit die Ukraine nicht verlassen(08:58) Gro&szlig;e Firmen h&auml;tten mehr Power, wenn sie die richtigen Informationen verbreiten w&uuml;rden(12:52) Firmen nutzen die Sanktionen als Marketing-Fall(13:42) Sanktionen und wie Firmen agiert haben(15:46) Elon Musk und StarLink in der Ukraine(17:54) Ukrainische Anfrage an die ICANN zur Abschaltung von dezentraler Infrastruktur(20:02) Was k&ouml;nnte Cloudflare tun?(21:19) Die Sanktionen treffen auch prim&auml;r die Zivilbev&ouml;lkerung(22:24) Wie Firmen auf Sanktionen reagieren ist sehr unterschiedlich(24:10) Arbeitschancen von geflohenen Ukrainern in der EU(25:40) Wie geht man mit betroffenen Arbeitskollegen um?(27:51) Was kann jeder von uns tun um zu helfen?(35:00) Side-Projekt: Wie kamen Open Source Projekte zu ihrem Namen?(36:30) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 2250047, "starts": 1, "streams": 1, "listeners": 1, "sparkLine": [], "hasVideo": false}, {"name": "#08 Vergiss doch Datenbanken!", "id": "49HSkGcpuzL3yTbEsguOMB", "url": "https://open.spotify.com/episode/49HSkGcpuzL3yTbEsguOMB", "releaseDate": "2022-03-01", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8ab64e541d7e4b0b20b3f0bcb5", "description": "Datenbanken, besonders relationale Datenbanken und im Web ganz besonders MySQL.Jeder kennt sie, jeder nutzt sie, aber keiner gibt zu diese zu nutzen da sie uncool und alt sind und sowieso nicht skalieren.Wolfgang und Andy sprechen ein wenig &uuml;ber dieses Thema: Wie man seine eigene SQL Datenbank schreibt, was der Unterschied von Row-Based und Statement-Based Replication ist, warum simple Dateien oft besser sind als eine Datenbank, ob sqlite helfen kann und MongoDB die L&ouml;sung ist, wie Facebook, Booking und GitHub MySQL betreiben, ob PostgreSQL wirklich was kann und welche Schritte ihr unternehmen k&ouml;nnt, um eure Datenbank zu tunen.Bonus: Ob Wolfgang Mickey Krause kennt und ob er ein erfolgreicher MySQL Buchautor war.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksSQLProxy: https://github.com/sysown/proxysqlVitess: https://vitess.io/Building for the 99% Developers: https://future.a16z.com/software-development-building-for-99-developers/Litestream: https://litestream.io/Designing Data-intensive Applications: https://dataintensive.net/MyRocks Storage Engine: http://myrocks.io/MySQL 8.0: The end of MyISAM: https://www.percona.com/blog/2016/10/11/mysql-8-0-end-myisam/Wolfgang&rsquo;s Talk: Forget Databases, use files!Efficient MySQL Performance Talk mit VideoGru&szlig; aus der Vergangenheit, Wolfi&rsquo;s Lehrveranstaltung Datenbankimplementierung (2011)&nbsp;NOW() und Time Funktionen bei Statement Based Replication in MySQLPercona Config Wizard wurde leider eingestellt aber alternativ kann MySQL Tuner&nbsp;https://www.linode.com/docs/guides/how-to-optimize-mysql-performance-using-mysqltuner/ verwendet werdenErw&auml;hnte PersonenMartin Kleppmann https://martin.kleppmann.com/Michael Stonebraker: https://de.wikipedia.org/wiki/Michael_StonebrakerMichael &ldquo;Monty&rdquo; Widenius: https://de.wikipedia.org/wiki/Michael_WideniusSprungmarken(00:00) Intro(00:15) Wolfgang und Apres-Ski(02:52) Wie programmiert man seine eigene Datenbank?(07:24) Was passiert, wenn eine SQL-Query die Datenbank erreicht?(10:02) Die Schwierigkeiten, wenn man seine eigene Datenbank programmiert(12:35) Sind Dateien besser als Datenbanken?(18:00) Keine Netzwerk-Verbindungen dank sqlite?(20:40) Was ist sqlite?(22:20) Aussprache von sqlite und SQL und woher es kommt(23:33) Wie kam MySQL und MariaDB zu ihrem Namen?(24:17) Was empfiehlst du f&uuml;r kleine Apps? MySQL oder sqlite?(25:06) Replikation von sqlite Daten(26:02) Unterschied zwischen Row- und Statement-Based Replication(27:56) Wie viel Requests kann man mit einer MySQL-Node bedienen?(29:35) Buchempfehlung: Designing Data-Intensive Application(31:42) Was tun, wenn ich Probleme mit MySQL-Performance hab?(33:16) MySQL bei Facebook(36:35) PostgreSQL, der andere Kandidat auf dem Spielfeld(38:33) Tooling um MySQL: ProxySQL und Vitess(43:38) MySQL Performance-Tipps vom Buch-Autor Wolfgang(50:33) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3167597, "starts": 6, "streams": 5, "listeners": 5, "sparkLine": [], "hasVideo": false}, {"name": "#07 Die Freelance Freiheit", "id": "5RCZ1mHsBVN83lWXu49xqQ", "url": "https://open.spotify.com/episode/5RCZ1mHsBVN83lWXu49xqQ", "releaseDate": "2022-02-22", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8afd6f4b95af005fe167a1dc45", "description": "Sein eigener Chef zu sein, sich die Projekte aussuchen k&ouml;nnen und sich die Zeit frei selbst einzuteilen. Obendrein noch einen Haufen Geld verdienen. Das ist die Vorstellung von vielen ITlern zur Selbstst&auml;ndigkeit. Doch wie sieht die Realit&auml;t aus? Was sind die negativen Aspekte? Und wie viel Geld kommt wirklich unterm Strich bei rum?In dieser Episode teilt Wolfgang seine langj&auml;hrige Freelance-Erfahrung: Welche Arten von Freelancing gibt es, wie er die Probleme beim Sch&auml;tzen des zeitlichen Aufwandes umgeht, warum rostende Software ein Problem ist und zu schlecht gelaunten Kunden f&uuml;hrt, ob es sich lohnt seine Finger zu versicherung und was goldene Handschellen mit all dem zu tun haben.Bonus: Wie Wolfgang einen Kunden beim Krafttraining im Fitnessstudio akquiriert hat, ohne selbst Gewichte zu stemmen.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksFreelancer Stundens&auml;tze: GULP Stundensatz KalkulatorFreelancer VermittlungsplattformenFreelancermap: https://www.freelancermap.de/Gulp: https://www.gulp.deHays: https://www.hays.deAnderesAls Kleinunternehmer im Sinne von &sect; 19 Abs. 1 UStG wird Umsatzsteuer nicht berechnet. (in Deutschland)Sprungmarken(00:00:00) Intro(00:00:45) Bier holen(00:01:43) Wolfgangs erstes Freelancing-Projekt(00:02:54) Weibliche Software-Engineering Freelancer(00:03:45) Wie Wolfgang zum Freelancing gekommen ist(00:05:17) Verschiedene Arten vom Freelancing(00:08:19) Freelancing als L&ouml;sung f&uuml;r Remote Work(00:10:16) Scheinselbstst&auml;ndigkeit(00:11:13) Entwicklung der Freelancing-Arbeit anhand deiner Erfahrung(00:14:14) Software Maintenance bei Freelancing-Projekten(00:17:40) Was sind die positiven Aspekte des Freelancings?(00:27:28) Was sind die negativen Seiten vom Freelancen?&nbsp;(00:28:25) Kundenakquise(00:29:44) Preisfindung(00:37:00) Wie geht man die Selbstst&auml;ndigkeit an? Wie setze ich es in der Praxis um?(00:40:42) Steuerberater(00:46:09) Welche Kosten kommen noch auf einen zu?(00:48:21) Haftung und was eine GmbH f&uuml;r dich tun kann(00:50:11) Gesch&auml;ftskonten(00:51:18) Der Start ist schwer und Weiterempfehlungen(00:54:29) Fragen, um herauszufinden, ob die Selbstst&auml;ndigkeit etwas f&uuml;r mich ist(00:59:56) Neben der Festanstellung starten(01:02:12) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 3841038, "starts": 3, "streams": 3, "listeners": 1, "sparkLine": [], "hasVideo": false}, {"name": "#06 Hype oder Hope: Job-Titel und Bef\u00f6rderungen", "id": "4mkmeVaXD6u8Tf9mpcBWd4", "url": "https://open.spotify.com/episode/4mkmeVaXD6u8Tf9mpcBWd4", "releaseDate": "2022-02-15", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8ad2ee67f98f9662a41f354ef5", "description": "Sind Machine Learning und Artificial Intelligence nur Hypes oder sollte ich meine Karriere dahingehend ausrichten? Und welche Hypes gibt es im Infrastruktur-Bereich? Und &uuml;berhaupt: Wie steht das alles im Zusammenhang mit Job-Titels, meiner Bef&ouml;rderung zum Senior Engineer und meinem Gehalt?All diese Themen kl&auml;ren Wolfgang und Andy in dieser wilden Folge. Weiterhin: Warum das Leben kein Ponyhof ist, was Agrar-Tech und autonom-fahrende Trecker, die Inflation und Kr&ouml;sus damit zu tun haben, sowie warum Software Engineers zu den Top 5% der Gesellschaft geh&ouml;ren.Bonus: Warum Wolfgang kein Eiskunstlauf macht und wie er seinen Dr.-Titel bekommen hat.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksDeepMind AlphaCode: https://www.deepmind.com/blog/article/Competitive-programming-with-AlphaCodeGitHub Co-Pilot: https://copilot.github.com/GPT-3 Model: https://en.wikipedia.org/wiki/GPT-3Engineering levels / levels.fyi: https://www.levels.fyi/?compare=Google,Facebook,Microsoft&amp;track=Software%20EngineerDown-Leveling = The Senioritz Rollercoaster: https://newsletter.pragmaticengineer.com/p/the-seniority-rollercoasterKr&ouml;sus: https://de.wiktionary.org/wiki/Kr%C3%B6susCareer ladders bei Firmen / progression.fyi: https://www.progression.fyi/CircleCI Engineering Competency Matrix: https://docs.google.com/spreadsheets/d/131XZCEb8LoXqy79WWrhCX4sBnGhCM1nAIz4feFZJsEo/edit#gid=0Erw&auml;hnte PersonenRuss Cox: https://swtch.com/~rsc/Sprungmarken(00:00) Intro(01:06) Deepmind News &quot;AlphaCode&quot; - Ein neuer Machine Learning Hype?(06:40) Wie kann Alpha Code in der Praxis genutzt werden?(08:04) Coding Challenges im Recruiting-Prozess(11:09) Hypes im Infrastruktur-Bereich(16:45) Frischer Wind von neuen Leuten in der Firma(19:22) Mono-Repos als Hype-Beispiel(20:55) Industrie-Definition von Job-Titles(26:03) Braucht man Job-Titles (Senior, etc.)?(31:43) Festgefahrene Strukturen in Konzernen(37:38) Geld ist bei weitem nicht alles bei einem Job(41:50) Mach das was dir Spa&szlig; machst und Generalisten vs. Spezialisten(45:36) 5-Jahres-Pl&auml;ne(49:56) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk&nbsp;", "explict": false, "language": "de", "duration": 3133906, "starts": 0, "streams": 0, "listeners": 0, "sparkLine": [], "hasVideo": false}, {"name": "#00 Developer fangen bei 0 an zu z\u00e4hlen", "id": "4TZwqBTtO2fNDt8XjQXjuR", "url": "https://open.spotify.com/episode/4TZwqBTtO2fNDt8XjQXjuR", "releaseDate": "2022-02-08", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a8d4cff3bddcf128d2e620487", "description": "Software Engineers fangen bei 0 an zu z&auml;hlen. Das Engineering Kiosk ist direkt bei Episode 1 gestartet. Diesen Off-by-one error beheben wir nun mit dieser Folge 0.Wir, Wolfgang und Andy, stellen uns als Hosts vor, erz&auml;hlen wie es zu diesem Podcast kam, wie wir gestartet haben, was wir in den ersten f&uuml;nf Folgen gelernt haben und wie die Podcast-Distribution technisch funktioniert.Nebenbei erfahren wir den Unterschied zwischen dem deutschen und &ouml;sterreichischem Verst&auml;ndnis von Cafe, warum Bachelor ein anderes Wort f&uuml;r Studenabbrecher ist und was Ziegen damit zu tun haben.Bonus: Ob Kaiserschmarrn mit oder ohne Rosinen gemacht wird.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskLinksDeutsche Spotify Podcast Charts: https://podcastcharts.byspotify.com/deTYPO3 Content Management System: https://typo3.org/Codeprints: https://codeprints.dev/Working Draft Podcast: https://workingdraft.de/Audacity, open-source audio Schnitt Software: https://www.audacityteam.org/Ziegen-BildSprungmarken(00:00) Intro(00:30) Gratulation zu 5 Episoden(01:43) Wer ist Wolfgang Gassler?(01:59) ... Was willst du mal werden, wenn du gro&szlig; bist?(02:44) ... Was ist das letzte, nicht IT technische, was du gelernt hast?(03:49) ... Was motiviert dich, dich jeden Tag erneut mit IT und Software Engineering zu besch&auml;ftigen?(05:05) ... Fakten-Check(06:29) ... Wolfgangs Personalakte(07:04) ... Wie viele Domains besitzt du, wo kein Side Projekt gestartet wurde?(07:58) Wer ist Andy Grunwald?(08:08) ... Was ist das erste, was du tust, wenn du einen Incident hast und wie Website down ist?(09:12) ... Warum macht es dir soviel Spa&szlig; aufzur&auml;umen und warum sind Ziegen auf deinem Instagram-Account?(11:26) ... Welcher Spruch soll auf deinem Grabstein stehen oder auf einem Banner in deiner Heimatstadt Duisburg?(12:03) ... Andys Personalakte(13:12) Warum machen wir das Engineering Kiosk?(15:42) Wie haben wir den Podcast gestartet?(20:01) Warum kommt die Folge 00 jetzt erst?(21:15) Was haben wir von 5 Podcast Episoden bereits gelernt?(25:28) Open Podcast(27:00) OutroHostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 1751690, "starts": 0, "streams": 0, "listeners": 0, "sparkLine": [], "hasVideo": false}, {"name": "#05 Team Lead - der einzige Ausweg", "id": "2YSw9LkxhXJeUuFaJOihVr", "url": "https://open.spotify.com/episode/2YSw9LkxhXJeUuFaJOihVr", "releaseDate": "2022-02-01", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a798b3a7eb1ba5cf7194eaec4", "description": "Engineering Manager oder Team-Lead: Eine Position die sehr motivierend, aber auch abschreckend wirken kann.Was erwartet einen? Was ist die Aufgabe einer Engineering Managerin? Wie ver&auml;ndert sich der Arbeitsalltag? Ist die Stelle &uuml;berhaupt etwas f&uuml;r mich? Und was passiert, wenn ich doch lieber Software Entwickeln m&ouml;chte? Gibt es einen alternativen Karrierepfad?All das und noch &uuml;ber viel mehr Erfahrungen sprechen Andy und Wolfgang in Episode 05 vom Engineering Kiosk.Bonus: Warum Andy Muskelkater im Arsch hatFeedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskErw&auml;hnte ArtikelMitchell's New Role at HashiCorp: https://www.hashicorp.com/blog/mitchell-s-new-role-at-hashicorpTom Bartel mit &quot;A Year Ago, I Stepped Away From a Leadership Position. Here Are 7 Things I Learned From That&quot;: https://www.tombartel.me/blog/leadership-position-to-individual-contributor-what-i-learned/ &quot;What is a Staff (or Staff-Plus or Principal) Engineer?&quot;: https://mikemcquaid.com/2021/10/01/what-is-a-staff-plus-principal-engineer/ B&uuml;cher &uuml;ber das Engineering Management&quot;The Managers Path&quot; von Camille Fournier&quot;Turn the ship around&quot; oder &quot;Rei&szlig; das Ruder rum!&quot; von David Marquet&quot;Drive&quot; von Daniel H. Pink&quot;Start with Why&quot; von Simon Sinek&quot;High Output Management&quot; von Andrew S. Grove&quot;An elegant puzzle&quot; von Will LarsonSprungmarken(00:55) H&ouml;rer Feedback(01:43) Wann bist du das erste mal in eine Teamlead-Stelle gerutscht?(03:15) Kann man bereits Aufgaben eines Teamleads &uuml;bernehmen, ohne ein Teamlead zu sein?(04:18) Wie viel Zeit hast du mit Hands-On und wie viel mit People Management verbracht?(04:52) Wie lang warst du Individual Contributor bevor du Teamleiter wurdest?(05:42) Was hat sich am meisten an deinem Arbeitsalltag ge&auml;ndert?(09:22) Was ist ein 1 on 1 Meeting und warum ist dies sinnvoll?(13:27) Was ist eine gute Teamgr&ouml;&szlig;e f&uuml;r den Start als Engineering Manager?(14:50) Woher wusstest du, was du als neuer Engineering Manager machen musst?(20:51) Empfehlungen um die Entscheidung &quot;M&ouml;chte ich den Job einer Engineering Managerin machen?&quot; treffen zu k&ouml;nnen(24:25) Feedback-Loop eines Software Engineers und eines Engineering Managers(25:50) Was solltest du nicht wollen, wenn du ein Engineering Manager werden m&ouml;chtest?(27:42) Ist es ab und zu notwendig, seine eigene Entscheidung im Team durchzusetzen?(28:36) Schwierige Konversationen als Engineering Manager(30:49) Ist es ein R&uuml;ckschritt wenn man als Engineering Manager zur&uuml;ck zum Software Engineer wechselt?(34:42) Wie sieht ein m&ouml;glicher Karriereweg aus, wenn der Engineering Manager-Weg nichts f&uuml;r mich ist?HostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk Podcast: Anfragen an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKiosk", "explict": false, "language": "de", "duration": 2412595, "starts": 0, "streams": 0, "listeners": 0, "sparkLine": [], "hasVideo": false}, {"name": "#04 Lohnt der Einstieg in Open Source?", "id": "1fAhILuNB97dYWuuiI9NwQ", "url": "https://open.spotify.com/episode/1fAhILuNB97dYWuuiI9NwQ", "releaseDate": "2022-01-25", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a425161fc2bb18eab83029085", "description": "F&uuml;r Andy ist Open Source und die Open Source Community ist bereits ein langer und essentieller Begleiter. In dieser Episode interviewed Wolfgang Andy genau zu dieseme Thema: Wie war sein Einsteig? Wieso es wichtig ist, sich Zeit zu nehmen um ein Bug-Ticket zu schreiben und was Snowboarden mit Open Source zu tun hat.Bonus: Wie man Andy dazu bringt, nackig durch die Wohnung zu flitzen.Feedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskAndy (https://twitter.com/andygrunwald) und Wolfgang (https://twitter.com/schafele) sprechen im Detail &uuml;ber:Sprungmarken(2:04) Wann hast du mit Open Source begonnen und warum?(03:27) Wie w&uuml;rdest du denn Open Source definieren?(05:08) Warum bist du in der Open Source Szene geblieben?(06:45) Hattest du mal schlechte Erlebnisse bei oder mit Open Source? als Maintainer?(07:33) ... und als Contributor?(08:15) Welche Tips kannst du Contributoren geben, um die Erfolgschancen f&uuml;r Pull Requests zu erh&ouml;hen?(10:04) Hast du Best Practices aus Maintainer-Seite, wie man mit Contributoren umgeht?(12:12) Wie geht man mit eigenen Open Source Projekten um, die man selbst nicht mehr nutzt?(15:31) Wie gehst du mit Feature Requests um?(17:56) Hat dir bereits jemand ein Feature gesponsored?(19:14) Open Source wird als Free work verstanden(20:45) Tipps f&uuml;r einen Feature Request bei einem Projekt(21:49) Kommunikation ist sehr wichtig(22:36) Wie siehst du den Stellenwert von Open Source im professionellem Umfeld?(24:35) Open Source als Mittel f&uuml;rs Recruiting(25:40) Wie kann sich eine kleine Firma im Open Source Bereich engagieren?(28:09) Was h&auml;lst du von dem Open Source First Konzept?(29:29) Was ist Inner Source?(30:40) Passw&ouml;rter und Secrets im Code(32:12) M&ouml;glichkeiten um ein Repository zu Open Sourcen(32:38) Negative Punkte f&uuml;r den Einsatz von Open Source(36:55) Welche Open Source Lizenz w&uuml;rdest du empfehlen, wenn jemand mit einem neuen Projekt starten m&ouml;chte?(39:29) Projekte auf GitHub ohne Lizenz(40:35) Beer- und Pizza-Lizenz(41:02) Kleine Sponsoring-Beitr&auml;ge und Danke-Nachrichten k&ouml;nnen viel bewirken(45:13) Andy flitzt nackig durch die Wohnung(48:15) Was deine Open Source Contribution mit deinem professionellen Werdegang zu tun hatErw&auml;hnte Artikel&quot;Choose an open source license&quot; von GitHub: https://choosealicense.com/&quot;Scaling from 2,000 to 25,000 engineers on GitHub at Microsoft&quot; von Jeff Wilcox: https://www.jeff.wilcox.name/2019/06/scaling-25k/&quot;F&uuml;r 50 Prozent der Entwickler ist Open Source ein 9-to-5-Job&quot;: https://www.techrepublic.com/article/for-50-percent-of-developers-open-source-is-a-9-to-5-job/&quot;BMW *are* complying with the GPL&quot; von Terence Eden: https://shkspr.mobi/blog/2016/03/bmw-are-complying-with-the-gpl/Erw&auml;hnte PersonenRichard Stallman: https://stallman.org/Daniel Stenberg: https://daniel.haxx.se/Erw&auml;hnte Projektecurl: https://curl.se/wolfSSL: https://www.wolfssl.com/Wolfgangs Doku-Wiki Plugin: https://github.com/woolfg/dokuwiki-plugin-gitbackedGerrit Code Review: https://www.gerritcodereview.com/TYPO3: https://typo3.org/Erw&auml;hnte EventsTYPO3 Snowboard Tour: https://t3board.typo3.org/FOSDEM: https://fosdem.org/2022/Erw&auml;hnte LizenzenBier-Lizenz: https://fedoraproject.org/wiki/Licensing/BeerwarePizza-Lizenz: https://github.com/PumaConcolor/pizza-licenseDo What the Fuck You Want to Public Lizenz: http://www.wtfpl.net/MIT Lizenz: https://opensource.org/licenses/MITBSD Lizenz: https://opensource.org/licenses/BSD-3-ClauseApache 2.0 Lizenz: https://www.apache.org/licenses/LICENSE-2.0HostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk PodcastAnfragen an stehtisch@engineeringkiosk.dev", "explict": false, "language": "de", "duration": 3044673, "starts": 5, "streams": 2, "listeners": 3, "sparkLine": [], "hasVideo": false}, {"name": "#03 Over-Engineering, das Werkzeug des Teufels?", "id": "7HI6NDwFJnM0w7W8xYjGqG", "url": "https://open.spotify.com/episode/7HI6NDwFJnM0w7W8xYjGqG", "releaseDate": "2022-01-18", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a494bb2d73d447c1c46abef76", "description": "Was ist eigentlich Over-Engineering? Und wann ist es einfach nur gutes Engineering? Ist das eigentlich immer nur negativ? Oder auch mal positiv? Gibt es auch Under-Engineering? In dieser Episode philosophieren Andy und Wolfgang dar&uuml;ber, wann der Drang nach dem perfekten Source-Code Overenegineering ist und warum es in der akademischen Welt nur dreckig programmiert wird.Bonus: Warum Wolfgang seine Kletterschuhe nach Tschechien sendetFeedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskAndy (https://twitter.com/andygrunwald) und Wolfgang (https://twitter.com/schafele) sprechen im Detail &uuml;berSprungmarken(00:00) Intro(01:25) Was ist Over-Engineering?(03:20) Umfeld vom Over-Engineering und die Anforderungen vom Projekt(08:15) Ist alter Source-Code Over- oder Underengineered?(09:00) Leiden Akademiker mehr unter Over-Engineering?(10:10) Wann wei&szlig; ich, ob ich etwas mehr Arbeit in ein Projekt stecken soll?(11:50) Ist die meiste Java-Software Over-Engineered?(12:55) Kann man nicht mit alles einfach dreckig starten?(14:40) Neue Technologie vs. das was ich schon kenne(17:55) Twitter-Umfrage, was Leute unter Over-Engineering verstehen(21:50) Das DRY-Prinzip(25:15) Ein ORM / Object-Relational Mapping(28:12) Dependency Injection(30:04) Hackernews Driven Development(33:20) Positives Over-Engineering(35:15) Methoden um sich selbst vor dem Over-Engineering zu sch&uuml;tzen(37:30) Wolfgang's Glaskugel(38:07) Overengineering findet viel zu selten statt(41:55) Bei Google steht ein staubiger Server im Datacenter, der die Suchmaschine betreibt(45:23) Underengineering bei der Reparatur von Kletterschuhen(46:40) Do things that don&rsquo;t scale - Wie startet man ein Projekt m&ouml;glichst einfach(47:55) Over-Engineering in der Automation&nbsp;(48:35) Fazit(50:20) Kontakt und OutroArtikelDo things that don't scale von Paul Graham: http://paulgraham.com/ds.htmlHackernews Driven Development: https://devdriven.by/hn/Byte Shifting: https://de.wikipedia.org/wiki/Bitweiser_OperatorKonzepteYou Aren&rsquo;t Gonna Need It (YAGNI): https://de.wikipedia.org/wiki/YAGNIDon&rsquo;t repeat yourself (DRY): https://de.wikipedia.org/wiki/Don%E2%80%99t_repeat_yourselfProjekteHackernews: https://news.ycombinator.com/JavaScript library &quot;left-pad&quot;: https://www.npmjs.com/package/left-padTerraform: https://www.terraform.io/HashiCorp configuration language: https://github.com/hashicorp/hclGo / Golang: https://go.dev/Engineering Kiosk PodcastAnfragen an stehtisch@engineeringkiosk.dev", "explict": false, "language": "de", "duration": 3079916, "starts": 11, "streams": 6, "listeners": 3, "sparkLine": [], "hasVideo": false}, {"name": "#02 Technologienzoo Side Projects", "id": "1OEVURealPs0TxTg4DGLFR", "url": "https://open.spotify.com/episode/1OEVURealPs0TxTg4DGLFR", "releaseDate": "2022-01-10", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a20b909346e79c61a63a405b6", "description": "Wolfgang und Andy erz&auml;hlen ein wenig was &uuml;ber ihre eigenen Side Projects sourcectl (https://gettoknow.sourcectl.dev/), F-Online (https://www.f-online.at/) und the athlete (https://theathlete.app/).Wir machen eine Rundfahrt durch den verwendeten Technologienzoo, diskutieren ob man Monitoring in Side Projects ben&ouml;tigt, wann es Over-Engineering und wann gerechtfertigt ist, ob der heutige Einsatz von Zend Framework 1 schon als kriminell gewertet werden kann und h&ouml;ren Wolfgang zu, wie er DevOps Anf&auml;ngerfehler begeht indem ihm die Festplatte voll logs l&auml;uft.Bonus: Wie Wolfgang den ultimativen Reichtum mit seinem eigenen CMS zur dotcom Blase verpasst hatFeedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskAndy (https://twitter.com/andygrunwald) und Wolfgang (https://twitter.com/schafele) sprechen im Detail &uuml;ber:Sprungmarken(00:00) Intro(02:03) Vorstellung von Andy und Wolfgang(02:18) Vorstellung Andy Grunwald(02:36) Vorstellung Wolfgang Gassler(03:11) Side Project &quot;inspect&quot;: Automatische Generierung einer RabbitMQ Architektur(04:23) Was ist RabbitMQ?(05:33) Side Project &quot;sourcectl&quot;: Metrik Platform f&uuml;r Inner Source und Open Sorurce Projekte(06:32) sourcectl: Warum nutzt du RabbitMQ und keine Datenbank f&uuml;r das Message Queuing?(07:48) sourcectl: Monitoring(08:55) sourcectl: Verarbeitung von Messages(09:50) sourcectl: Infrastruktur- und Application-Setup(12:01) Was zur H&ouml;lle ist ein OMR (vs. ein ORM)?(12:53) Was ist Traefik: The Cloud Native Application Proxy?&nbsp;(17:45) Traefik Pro und Overengineering: Loadbalancing &uuml;ber mehrere Server und verteilte SSL Zertifikate(20:00) Side Project &quot;F-Online&quot;: F&uuml;r den F&uuml;hrerschein in &Ouml;sterreich lernen(21:34) F-Online: Hosting und Monitoring(25:27) Tipps um Kosten bei Google Cloud unter Kontrolle zu halten(26:01) F-Online: Infrastruktur- und Application-Setup(26:42) Wolfgangs Leiche im Keller: Zend Framework 1 auf (teils) aktueller PHP Version(29:00) F-Online: JavaScript Architektur(31:29) F-Online: APIs(32:40) F-Online: Datenbank(34:39) F-Online: Wie es aussehen w&uuml;rde, wenn es nochmal neu gebaut werden w&uuml;rde(37:22) Engineers over-engineeren von Haus aus(37:40) Side Project &quot;the athlete&quot;(39:02) Ziele, Motivation und die (eigenen) Erwartungen an Side Projects(40:28) Wolfgang erz&auml;hlt vom Krieg: Sein eigenes Content Management System(42:37) OutroErw&auml;hnte Side Projectssourcectl (https://gettoknow.sourcectl.dev/)F-Online (https://www.f-online.at/)the athlete (https://theathlete.app/)Erw&auml;hnte TechnologienAMQP (https://www.amqp.org/)Babel (https://babeljs.io/)Backbone (https://backbonejs.org/)DigitalOcean (https://www.digitalocean.com/)Docker (https://www.docker.com/)Flutter (https://flutter.dev/)GitHub (https://github.com/)Go (https://go.dev/)Google Cloud Free-Tier (https://cloud.google.com/free)Grafana (https://grafana.com/)GraphQL API (https://graphql.org/)Grunt (https://gruntjs.com/)Hetzner Cloud (https://www.hetzner.com/de/cloud)JQuery (https://jquery.com/)Kubernetes (https://kubernetes.io/)Lets Encrypt (https://letsencrypt.org/)Marionette (https://marionettejs.com/)MooTools (https://mootools.net/)MySQL (https://www.mysql.com/)Nginx (https://www.nginx.com/)PHP (https://www.php.net/)Prometheus (https://prometheus.io/)RabbitMQ (https://www.rabbitmq.com/)React (https://reactjs.org/)React Native (https://reactnative.dev/)Script.aculo.us (https://script.aculo.us/)Terraform (https://www.terraform.io/)Traefik (https://traefik.io/)VueJS (https://vuejs.org/)Webpack (https://webpack.js.org/)Zend Framework 1 (https://github.com/zendframework/zf1)AnderesOMR - Online Marketing Rockstars (https://omr.com/de/)No Code (https://www.nocode.tech/)Erw&auml;hnte PersonenMatthias Endler (https://twitter.com/matthiasendler / https://endler.dev/)HostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk PodcastAnfragen an stehtisch@engineeringkiosk.dev", "explict": false, "language": "de", "duration": 2690433, "starts": 6, "streams": 5, "listeners": 4, "sparkLine": [], "hasVideo": false}, {"name": "#01 Side Projects - Fluch oder Segen f\u00fcr die Karriere?", "id": "0uT54qYXLeoYPIerWNK6WY", "url": "https://open.spotify.com/episode/0uT54qYXLeoYPIerWNK6WY", "releaseDate": "2022-01-03", "artworkUrl": "https://i.scdn.co/image/ab6765630000ba8a00e5b91c107627cc52b14d57", "description": "Zwei Engineering Manager &uuml;ber Side Projects: Wie diese den Recruiting Prozess beeinflussen, welche Learnings aus einem Projekt generiert werden, was die freiwillige Feuerwehr mit Site Reliability Engineering zu tun hat, welche negativen Seiten Side Projects haben k&ouml;nnen, ob ein Hund auch ein eigenes Side Project ist und warum man nicht seinen eigenen Mailserver betreiben sollte.Bonus: Der Unterschied zwischen Schnacken und SchnackselnFeedback an stehtisch@engineeringkiosk.dev oder via Twitter an https://twitter.com/EngKioskAndy (https://twitter.com/andygrunwald) und Wolfgang (https://twitter.com/schafele) sprechen im Detail &uuml;ber:Sprungmarken(00:26) Warum &quot;Engineering Kiosk&quot;? Woher kommt der Name?(01:52) Einstieg ins Thema &quot;Side Projects&quot;(02:00) Side Projects im Recruiting Prozess und Lebenslauf(03:45) Muss das Side Project etwas mit dem Job zu tun haben?(05:40) Alleine oder im Team?(08:10) Was bringt dir die Information &quot;Side Project&quot; f&uuml;r das Interview selbst?(11:25) Hire for Skill or for attitude(12:43) Kann ein Side Project auch etwas negatives bedeuten (als Hiring Manager)?(14:55) Wolfgang erz&auml;hlt aus dem Krieg: Sein Mail-Server Side-Project(18:31) Psychologischer Druck bei Side Projects(19:23) Learnings aus Side Projects(23:44) Rollen-, Zeit- und Energiemanagement: Side-Projects mit Familie/in der Freizeit(31:53) Side Projects als Ausgleich(34:10) Learnings aus dem Side Project im Job als Engineering Manager(36:27) Lohnen sich Side Projects f&uuml;r die Job-Suche?(40:02) Wie Ihr eure Side Projects nutzen k&ouml;nnt um das Interview zu eurem Vorteil zu drehen(42:45) Brauchen wir POP3 noch?(43:34) Top Tip: Startet ein Side Project und setzt euch die richtigen Erwartungen(44:39) Sind Arbeitgeber gl&uuml;cklich &uuml;ber Side Projects von MitarbeiterInnen?Erw&auml;hnte PersonenTom Bartel (https://twitter.com/twbartel / https://www.tombartel.me/)Joost Ronkes Agerbeek (https://www.linkedin.com/in/joost-ronkes-agerbeek-46a41339/)HostsWolfgang Gassler (https://twitter.com/schafele)Andy Grunwald (https://twitter.com/andygrunwald)Engineering Kiosk PodcastAnfragen an stehtisch@engineeringkiosk.dev", "explict": false, "language": "de", "duration": 2782508, "starts": 8, "streams": 6, "listeners": 7, "sparkLine": [], "hasVideo": false}], "totalPages": 1, "currentPage": 1, "totalEpisodes": 43, "metadata": {"network": {"id": "7ntuA2GvW83lzk7b4OSjrm", "name": "SeedCast, Inc", "doingBusinessAs": "RedCircle"}, "show": {"id": "0tJRC0UsObPCWLmmzmOkIs", "name": "Engineering Kiosk"}, "startDate": "2022-09-27", "endDate": "2022-10-27"}}